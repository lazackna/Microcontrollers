
UltraSonic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00001072  00001106  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001072  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000017  0080010a  0080010a  00001110  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001110  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000116c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  000011a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000eca  00000000  00000000  00001268  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ac1  00000000  00000000  00002132  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000080d  00000000  00000000  00002bf3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000248  00000000  00000000  00003400  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000570  00000000  00000000  00003648  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005fb  00000000  00000000  00003bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000041b3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
       6:	00 00       	nop
       8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
       a:	00 00       	nop
       c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
       e:	00 00       	nop
      10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
      12:	00 00       	nop
      14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
      16:	00 00       	nop
      18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	cc c0       	rjmp	.+408    	; 0x1b6 <__vector_7>
      1e:	00 00       	nop
      20:	e2 c0       	rjmp	.+452    	; 0x1e6 <__vector_8>
      22:	00 00       	nop
      24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
      26:	00 00       	nop
      28:	2e c1       	rjmp	.+604    	; 0x286 <__vector_10>
      2a:	00 00       	nop
      2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
      32:	00 00       	nop
      34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
      36:	00 00       	nop
      38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	4a c1       	rjmp	.+660    	; 0x2d2 <__vector_15>
      3e:	00 00       	nop
      40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
      42:	00 00       	nop
      44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
      46:	00 00       	nop
      48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
      52:	00 00       	nop
      54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
      56:	00 00       	nop
      58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
      62:	00 00       	nop
      64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
      66:	00 00       	nop
      68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
      72:	00 00       	nop
      74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
      76:	00 00       	nop
      78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
      82:	00 00       	nop
      84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
      86:	00 00       	nop
      88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	11 e0       	ldi	r17, 0x01	; 1
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	e2 e7       	ldi	r30, 0x72	; 114
      a0:	f0 e1       	ldi	r31, 0x10	; 16
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	aa 30       	cpi	r26, 0x0A	; 10
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	21 e0       	ldi	r18, 0x01	; 1
      b4:	aa e0       	ldi	r26, 0x0A	; 10
      b6:	b1 e0       	ldi	r27, 0x01	; 1
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	a1 32       	cpi	r26, 0x21	; 33
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	c0 d1       	rcall	.+896    	; 0x444 <main>
      c4:	d4 c7       	rjmp	.+4008   	; 0x106e <_exit>

000000c6 <__bad_interrupt>:
      c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <lcd_en>:
	PORTC = 0x02;
	lcd_en();
}

void lcd_en(void) {
	PORTC |= (1<<LCD_EN);	// E high
      c8:	85 b3       	in	r24, 0x15	; 21
      ca:	88 60       	ori	r24, 0x08	; 8
      cc:	85 bb       	out	0x15, r24	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
      ce:	8f ec       	ldi	r24, 0xCF	; 207
      d0:	97 e0       	ldi	r25, 0x07	; 7
      d2:	01 97       	sbiw	r24, 0x01	; 1
      d4:	f1 f7       	brne	.-4      	; 0xd2 <lcd_en+0xa>
      d6:	00 c0       	rjmp	.+0      	; 0xd8 <lcd_en+0x10>
      d8:	00 00       	nop
	_delay_ms(1);			// nodig
	PORTC &= ~(1<<LCD_EN);  	// E low
      da:	85 b3       	in	r24, 0x15	; 21
      dc:	87 7f       	andi	r24, 0xF7	; 247
      de:	85 bb       	out	0x15, r24	; 21
      e0:	8f ec       	ldi	r24, 0xCF	; 207
      e2:	97 e0       	ldi	r25, 0x07	; 7
      e4:	01 97       	sbiw	r24, 0x01	; 1
      e6:	f1 f7       	brne	.-4      	; 0xe4 <lcd_en+0x1c>
      e8:	00 c0       	rjmp	.+0      	; 0xea <lcd_en+0x22>
      ea:	00 00       	nop
      ec:	08 95       	ret

000000ee <lcd_write_data>:
	for(;*str; str++){
		lcd_write_data(*str);
	}
}

void lcd_write_data(unsigned char byte) {
      ee:	cf 93       	push	r28
      f0:	c8 2f       	mov	r28, r24
	// First nibble.
	PORTC = byte;
      f2:	85 bb       	out	0x15, r24	; 21
	PORTC |= (1<<LCD_RS);
      f4:	85 b3       	in	r24, 0x15	; 21
      f6:	84 60       	ori	r24, 0x04	; 4
      f8:	85 bb       	out	0x15, r24	; 21
	lcd_en();
      fa:	e6 df       	rcall	.-52     	; 0xc8 <lcd_en>

	// Second nibble
	PORTC = (byte<<4);
      fc:	c2 95       	swap	r28
      fe:	c0 7f       	andi	r28, 0xF0	; 240
     100:	c5 bb       	out	0x15, r28	; 21
	PORTC |= (1<<LCD_RS);
     102:	85 b3       	in	r24, 0x15	; 21
     104:	84 60       	ori	r24, 0x04	; 4
	lcd_en();
     106:	85 bb       	out	0x15, r24	; 21
     108:	df df       	rcall	.-66     	; 0xc8 <lcd_en>
}
     10a:	cf 91       	pop	r28
     10c:	08 95       	ret

0000010e <lcd_init_4bits_mode>:

void lcd_init_4bits_mode(void) {
     10e:	cf 93       	push	r28
	// PORTC output mode and all low (also E and RS pin)
	DDRC = 0xFF;
     110:	8f ef       	ldi	r24, 0xFF	; 255
     112:	84 bb       	out	0x14, r24	; 20
	PORTC = 0x00;
     114:	15 ba       	out	0x15, r1	; 21

	// Step 2 (table 12)
	PORTC = 0x20;	// Set lcd to 4-bit mode.
     116:	c0 e2       	ldi	r28, 0x20	; 32
     118:	c5 bb       	out	0x15, r28	; 21
	lcd_en();
     11a:	d6 df       	rcall	.-84     	; 0xc8 <lcd_en>

	// Step 3 (table 12)
	PORTC = 0x20;  
	lcd_en();
     11c:	c5 bb       	out	0x15, r28	; 21
     11e:	d4 df       	rcall	.-88     	; 0xc8 <lcd_en>
	PORTC = 0x80; // Set to 2 lines.
     120:	80 e8       	ldi	r24, 0x80	; 128
	lcd_en();
     122:	85 bb       	out	0x15, r24	; 21

	// Step 4 (table 12)
	PORTC = 0x00;   
     124:	d1 df       	rcall	.-94     	; 0xc8 <lcd_en>
	lcd_en();
     126:	15 ba       	out	0x15, r1	; 21
	PORTC = 0b11000000; // Lcd, blink and cursor on.
     128:	cf df       	rcall	.-98     	; 0xc8 <lcd_en>
	lcd_en();
     12a:	80 ec       	ldi	r24, 0xC0	; 192

	// Step 4 (table 12)
	PORTC = 0x00;  
     12c:	85 bb       	out	0x15, r24	; 21
	lcd_en();
     12e:	cc df       	rcall	.-104    	; 0xc8 <lcd_en>
     130:	15 ba       	out	0x15, r1	; 21
	PORTC = 0x60; // Increase cursor position.
     132:	ca df       	rcall	.-108    	; 0xc8 <lcd_en>
     134:	80 e6       	ldi	r24, 0x60	; 96
	lcd_en();
     136:	85 bb       	out	0x15, r24	; 21
     138:	c7 df       	rcall	.-114    	; 0xc8 <lcd_en>

}
     13a:	cf 91       	pop	r28
     13c:	08 95       	ret

0000013e <lcd_reset>:

void lcd_reset(void){
	
	PORTC = 0x00;
     13e:	15 ba       	out	0x15, r1	; 21
	lcd_en();
     140:	c3 df       	rcall	.-122    	; 0xc8 <lcd_en>
	PORTC = 0x01; 
     142:	81 e0       	ldi	r24, 0x01	; 1
	lcd_en();
     144:	85 bb       	out	0x15, r24	; 21
	
	PORTC = 0x00;
     146:	c0 df       	rcall	.-128    	; 0xc8 <lcd_en>
	lcd_en();
     148:	15 ba       	out	0x15, r1	; 21
	PORTC = 0x02;
     14a:	be df       	rcall	.-132    	; 0xc8 <lcd_en>
     14c:	82 e0       	ldi	r24, 0x02	; 2
	lcd_en();
     14e:	85 bb       	out	0x15, r24	; 21
     150:	bb cf       	rjmp	.-138    	; 0xc8 <lcd_en>
     152:	08 95       	ret

00000154 <lcd_command>:
	PORTC &= ~(1<<LCD_EN);  	// E low
	_delay_ms(1);
}

void lcd_command ( unsigned char dat ){
	PORTC = dat & 0xF0;			// hoge nibble
     154:	98 2f       	mov	r25, r24
     156:	90 7f       	andi	r25, 0xF0	; 240
     158:	95 bb       	out	0x15, r25	; 21
	PORTC |= 0x08;				// data (RS=0),									// start (EN=1)
     15a:	95 b3       	in	r25, 0x15	; 21
     15c:	98 60       	ori	r25, 0x08	; 8
     15e:	95 bb       	out	0x15, r25	; 21
     160:	ef ec       	ldi	r30, 0xCF	; 207
     162:	f7 e0       	ldi	r31, 0x07	; 7
     164:	31 97       	sbiw	r30, 0x01	; 1
     166:	f1 f7       	brne	.-4      	; 0x164 <lcd_command+0x10>
     168:	00 c0       	rjmp	.+0      	; 0x16a <lcd_command+0x16>
     16a:	00 00       	nop
	_delay_ms(1);					// wait 1 ms
	PORTC = 0x04;					// stop (EN = 0)
     16c:	94 e0       	ldi	r25, 0x04	; 4
     16e:	95 bb       	out	0x15, r25	; 21
	
	PORTC = (dat & 0x0F) << 4;	// lage nibble
     170:	f0 e1       	ldi	r31, 0x10	; 16
     172:	8f 9f       	mul	r24, r31
     174:	c0 01       	movw	r24, r0
     176:	11 24       	eor	r1, r1
     178:	85 bb       	out	0x15, r24	; 21
	PORTC |= 0x08;				// data (RS=0),									// start (EN=1)
     17a:	85 b3       	in	r24, 0x15	; 21
     17c:	88 60       	ori	r24, 0x08	; 8
     17e:	85 bb       	out	0x15, r24	; 21
     180:	8f ec       	ldi	r24, 0xCF	; 207
     182:	97 e0       	ldi	r25, 0x07	; 7
     184:	01 97       	sbiw	r24, 0x01	; 1
     186:	f1 f7       	brne	.-4      	; 0x184 <lcd_command+0x30>
     188:	00 c0       	rjmp	.+0      	; 0x18a <lcd_command+0x36>
     18a:	00 00       	nop
	_delay_ms(1);					// wait 1 ms
	PORTC = 0x00;					// stop (EN=0 RS=0)
     18c:	15 ba       	out	0x15, r1	; 21
     18e:	08 95       	ret

00000190 <set_cursor>:
 */ 

#include "lcd.h"

void set_cursor(int position){
	lcd_command((0x80 + position));
     190:	80 58       	subi	r24, 0x80	; 128
     192:	e0 cf       	rjmp	.-64     	; 0x154 <lcd_command>
     194:	08 95       	ret

00000196 <lcd_write_string>:
}

void lcd_write_string(const char *str) {
     196:	cf 93       	push	r28
     198:	df 93       	push	r29
     19a:	ec 01       	movw	r28, r24
	lcd_reset();
     19c:	d0 df       	rcall	.-96     	; 0x13e <lcd_reset>
	set_cursor(0);
     19e:	80 e0       	ldi	r24, 0x00	; 0
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	f6 df       	rcall	.-20     	; 0x190 <set_cursor>
	for(;*str; str++){
     1a4:	02 c0       	rjmp	.+4      	; 0x1aa <lcd_write_string+0x14>
		lcd_write_data(*str);
     1a6:	a3 df       	rcall	.-186    	; 0xee <lcd_write_data>
     1a8:	21 96       	adiw	r28, 0x01	; 1
}

void lcd_write_string(const char *str) {
	lcd_reset();
	set_cursor(0);
	for(;*str; str++){
     1aa:	88 81       	ld	r24, Y
     1ac:	81 11       	cpse	r24, r1
     1ae:	fb cf       	rjmp	.-10     	; 0x1a6 <lcd_write_string+0x10>
     1b0:	df 91       	pop	r29
		lcd_write_data(*str);
	}
}
     1b2:	cf 91       	pop	r28
     1b4:	08 95       	ret

000001b6 <__vector_7>:
     1b6:	1f 92       	push	r1
long int TimerOverflow = 0;

double distance = 0; // distance in cm

char * text;
ISR ( INT6_vect ) {
     1b8:	0f 92       	push	r0
     1ba:	0f b6       	in	r0, 0x3f	; 63
     1bc:	0f 92       	push	r0
     1be:	11 24       	eor	r1, r1
     1c0:	8f 93       	push	r24
	TCNT2 = 0;	// Clear the timer register.
     1c2:	14 bc       	out	0x24, r1	; 36
	TimerOverflow = 0;
     1c4:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <TimerOverflow>
     1c8:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <TimerOverflow+0x1>
     1cc:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <TimerOverflow+0x2>
     1d0:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <TimerOverflow+0x3>
	TCCR2 |= 0b001; // Start the timer with no prescaler.
     1d4:	85 b5       	in	r24, 0x25	; 37
     1d6:	81 60       	ori	r24, 0x01	; 1
     1d8:	85 bd       	out	0x25, r24	; 37
}
     1da:	8f 91       	pop	r24
     1dc:	0f 90       	pop	r0
     1de:	0f be       	out	0x3f, r0	; 63
     1e0:	0f 90       	pop	r0
     1e2:	1f 90       	pop	r1
     1e4:	18 95       	reti

000001e6 <__vector_8>:

ISR ( INT7_vect ) {
     1e6:	1f 92       	push	r1
     1e8:	0f 92       	push	r0
     1ea:	0f b6       	in	r0, 0x3f	; 63
     1ec:	0f 92       	push	r0
     1ee:	11 24       	eor	r1, r1
     1f0:	0b b6       	in	r0, 0x3b	; 59
     1f2:	0f 92       	push	r0
     1f4:	2f 93       	push	r18
     1f6:	3f 93       	push	r19
     1f8:	4f 93       	push	r20
     1fa:	5f 93       	push	r21
     1fc:	6f 93       	push	r22
     1fe:	7f 93       	push	r23
     200:	8f 93       	push	r24
     202:	9f 93       	push	r25
     204:	af 93       	push	r26
     206:	bf 93       	push	r27
     208:	ef 93       	push	r30
     20a:	ff 93       	push	r31
	TCCR2 &= 0b11111000;	// Stop the timer.
     20c:	85 b5       	in	r24, 0x25	; 37
     20e:	88 7f       	andi	r24, 0xF8	; 248
     210:	85 bd       	out	0x25, r24	; 37
	long long int value = TCNT2 + (255 * TimerOverflow); // don't forget to add the current value in the timer.
     212:	e4 b5       	in	r30, 0x24	; 36
     214:	20 91 17 01 	lds	r18, 0x0117	; 0x800117 <TimerOverflow>
     218:	30 91 18 01 	lds	r19, 0x0118	; 0x800118 <TimerOverflow+0x1>
     21c:	40 91 19 01 	lds	r20, 0x0119	; 0x800119 <TimerOverflow+0x2>
     220:	50 91 1a 01 	lds	r21, 0x011A	; 0x80011a <TimerOverflow+0x3>
     224:	af ef       	ldi	r26, 0xFF	; 255
     226:	b0 e0       	ldi	r27, 0x00	; 0
     228:	01 d3       	rcall	.+1538   	; 0x82c <__muluhisi3>
     22a:	6e 0f       	add	r22, r30
     22c:	71 1d       	adc	r23, r1
     22e:	81 1d       	adc	r24, r1
     230:	91 1d       	adc	r25, r1
	TCNT2 = 0;	// Clear the timer register.
     232:	14 bc       	out	0x24, r1	; 36
	TimerOverflow = 0;
     234:	10 92 17 01 	sts	0x0117, r1	; 0x800117 <TimerOverflow>
     238:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <TimerOverflow+0x1>
     23c:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <TimerOverflow+0x2>
     240:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <TimerOverflow+0x3>

	distance = (double)value / soundMultiplier; 
     244:	f1 d1       	rcall	.+994    	; 0x628 <__floatsisf>
     246:	29 e2       	ldi	r18, 0x29	; 41
     248:	3c e3       	ldi	r19, 0x3C	; 60
     24a:	49 ee       	ldi	r20, 0xE9	; 233
     24c:	53 e4       	ldi	r21, 0x43	; 67
     24e:	4d d1       	rcall	.+666    	; 0x4ea <__divsf3>
     250:	60 93 13 01 	sts	0x0113, r22	; 0x800113 <distance>
     254:	70 93 14 01 	sts	0x0114, r23	; 0x800114 <distance+0x1>
     258:	80 93 15 01 	sts	0x0115, r24	; 0x800115 <distance+0x2>
     25c:	90 93 16 01 	sts	0x0116, r25	; 0x800116 <distance+0x3>
}
     260:	ff 91       	pop	r31
     262:	ef 91       	pop	r30
     264:	bf 91       	pop	r27
     266:	af 91       	pop	r26
     268:	9f 91       	pop	r25
     26a:	8f 91       	pop	r24
     26c:	7f 91       	pop	r23
     26e:	6f 91       	pop	r22
     270:	5f 91       	pop	r21
     272:	4f 91       	pop	r20
     274:	3f 91       	pop	r19
     276:	2f 91       	pop	r18
     278:	0f 90       	pop	r0
     27a:	0b be       	out	0x3b, r0	; 59
     27c:	0f 90       	pop	r0
     27e:	0f be       	out	0x3f, r0	; 63
     280:	0f 90       	pop	r0
     282:	1f 90       	pop	r1
     284:	18 95       	reti

00000286 <__vector_10>:

/************************************************************************/
/* Count the amount of overflows on timer2                                                                     */
/************************************************************************/
ISR ( TIMER2_OVF_vect ) {
     286:	1f 92       	push	r1
     288:	0f 92       	push	r0
     28a:	0f b6       	in	r0, 0x3f	; 63
     28c:	0f 92       	push	r0
     28e:	11 24       	eor	r1, r1
     290:	8f 93       	push	r24
     292:	9f 93       	push	r25
     294:	af 93       	push	r26
     296:	bf 93       	push	r27
	TimerOverflow+= 1;
     298:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <TimerOverflow>
     29c:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <TimerOverflow+0x1>
     2a0:	a0 91 19 01 	lds	r26, 0x0119	; 0x800119 <TimerOverflow+0x2>
     2a4:	b0 91 1a 01 	lds	r27, 0x011A	; 0x80011a <TimerOverflow+0x3>
     2a8:	01 96       	adiw	r24, 0x01	; 1
     2aa:	a1 1d       	adc	r26, r1
     2ac:	b1 1d       	adc	r27, r1
     2ae:	80 93 17 01 	sts	0x0117, r24	; 0x800117 <TimerOverflow>
     2b2:	90 93 18 01 	sts	0x0118, r25	; 0x800118 <TimerOverflow+0x1>
     2b6:	a0 93 19 01 	sts	0x0119, r26	; 0x800119 <TimerOverflow+0x2>
     2ba:	b0 93 1a 01 	sts	0x011A, r27	; 0x80011a <TimerOverflow+0x3>
	TCNT2 = 0;
     2be:	14 bc       	out	0x24, r1	; 36
}
     2c0:	bf 91       	pop	r27
     2c2:	af 91       	pop	r26
     2c4:	9f 91       	pop	r25
     2c6:	8f 91       	pop	r24
     2c8:	0f 90       	pop	r0
     2ca:	0f be       	out	0x3f, r0	; 63
     2cc:	0f 90       	pop	r0
     2ce:	1f 90       	pop	r1
     2d0:	18 95       	reti

000002d2 <__vector_15>:
/************************************************************************/
/* Turn a pin on/off on the compare of timer0.							*/
/************************************************************************/
char isOn = 0;
long long int timesCompare = 0;
ISR ( TIMER0_COMP_vect ) {
     2d2:	1f 92       	push	r1
     2d4:	0f 92       	push	r0
     2d6:	0f b6       	in	r0, 0x3f	; 63
     2d8:	0f 92       	push	r0
     2da:	11 24       	eor	r1, r1
     2dc:	0b b6       	in	r0, 0x3b	; 59
     2de:	0f 92       	push	r0
     2e0:	8f 92       	push	r8
     2e2:	9f 92       	push	r9
     2e4:	af 92       	push	r10
     2e6:	bf 92       	push	r11
     2e8:	cf 92       	push	r12
     2ea:	df 92       	push	r13
     2ec:	ef 92       	push	r14
     2ee:	ff 92       	push	r15
     2f0:	2f 93       	push	r18
     2f2:	3f 93       	push	r19
     2f4:	4f 93       	push	r20
     2f6:	5f 93       	push	r21
     2f8:	6f 93       	push	r22
     2fa:	7f 93       	push	r23
     2fc:	8f 93       	push	r24
     2fe:	9f 93       	push	r25
     300:	af 93       	push	r26
     302:	bf 93       	push	r27
     304:	ef 93       	push	r30
     306:	ff 93       	push	r31
	if(distance > maxCm) return;
     308:	c0 90 13 01 	lds	r12, 0x0113	; 0x800113 <distance>
     30c:	d0 90 14 01 	lds	r13, 0x0114	; 0x800114 <distance+0x1>
     310:	e0 90 15 01 	lds	r14, 0x0115	; 0x800115 <distance+0x2>
     314:	f0 90 16 01 	lds	r15, 0x0116	; 0x800116 <distance+0x3>
     318:	20 e0       	ldi	r18, 0x00	; 0
     31a:	30 e0       	ldi	r19, 0x00	; 0
     31c:	40 e7       	ldi	r20, 0x70	; 112
     31e:	52 e4       	ldi	r21, 0x42	; 66
     320:	c7 01       	movw	r24, r14
     322:	b6 01       	movw	r22, r12
     324:	5b d2       	rcall	.+1206   	; 0x7dc <__gesf2>
     326:	18 16       	cp	r1, r24
     328:	0c f4       	brge	.+2      	; 0x32c <__vector_15+0x5a>
     32a:	60 c0       	rjmp	.+192    	; 0x3ec <__vector_15+0x11a>
	if(timesCompare > (distance / rangeMultiplier)) {
     32c:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
     330:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
     334:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <__data_end+0x2>
     338:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <__data_end+0x3>
     33c:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end+0x4>
     340:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x5>
     344:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x6>
     348:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x7>
     34c:	67 d1       	rcall	.+718    	; 0x61c <__floatdisf>
     34e:	4b 01       	movw	r8, r22
     350:	5c 01       	movw	r10, r24
     352:	20 e0       	ldi	r18, 0x00	; 0
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	40 e4       	ldi	r20, 0x40	; 64
     358:	50 e4       	ldi	r21, 0x40	; 64
     35a:	c7 01       	movw	r24, r14
     35c:	b6 01       	movw	r22, r12
     35e:	c5 d0       	rcall	.+394    	; 0x4ea <__divsf3>
     360:	9b 01       	movw	r18, r22
     362:	ac 01       	movw	r20, r24
     364:	c5 01       	movw	r24, r10
     366:	b4 01       	movw	r22, r8
     368:	39 d2       	rcall	.+1138   	; 0x7dc <__gesf2>
     36a:	18 16       	cp	r1, r24
     36c:	ec f4       	brge	.+58     	; 0x3a8 <__vector_15+0xd6>
		if(isOn) {
     36e:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <isOn>
     372:	88 23       	and	r24, r24
     374:	29 f0       	breq	.+10     	; 0x380 <__vector_15+0xae>
			isOn = 0;
     376:	10 92 12 01 	sts	0x0112, r1	; 0x800112 <isOn>
			PORTB = 1;
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	88 bb       	out	0x18, r24	; 24
     37e:	04 c0       	rjmp	.+8      	; 0x388 <__vector_15+0xb6>
		} else {
			PORTB = 0;
     380:	18 ba       	out	0x18, r1	; 24
			isOn = 1;
     382:	81 e0       	ldi	r24, 0x01	; 1
     384:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <isOn>
		}
		timesCompare = 0;
     388:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
     38c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <__data_end+0x1>
     390:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <__data_end+0x2>
     394:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <__data_end+0x3>
     398:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__data_end+0x4>
     39c:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <__data_end+0x5>
     3a0:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <__data_end+0x6>
     3a4:	10 92 11 01 	sts	0x0111, r1	; 0x800111 <__data_end+0x7>
	}
	timesCompare++;
     3a8:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__data_end>
     3ac:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__data_end+0x1>
     3b0:	40 91 0c 01 	lds	r20, 0x010C	; 0x80010c <__data_end+0x2>
     3b4:	50 91 0d 01 	lds	r21, 0x010D	; 0x80010d <__data_end+0x3>
     3b8:	60 91 0e 01 	lds	r22, 0x010E	; 0x80010e <__data_end+0x4>
     3bc:	70 91 0f 01 	lds	r23, 0x010F	; 0x80010f <__data_end+0x5>
     3c0:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <__data_end+0x6>
     3c4:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <__data_end+0x7>
     3c8:	a1 e0       	ldi	r26, 0x01	; 1
     3ca:	3a d2       	rcall	.+1140   	; 0x840 <__adddi3_s8>
     3cc:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <__data_end>
     3d0:	30 93 0b 01 	sts	0x010B, r19	; 0x80010b <__data_end+0x1>
     3d4:	40 93 0c 01 	sts	0x010C, r20	; 0x80010c <__data_end+0x2>
     3d8:	50 93 0d 01 	sts	0x010D, r21	; 0x80010d <__data_end+0x3>
     3dc:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <__data_end+0x4>
     3e0:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <__data_end+0x5>
     3e4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end+0x6>
     3e8:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x7>
}
     3ec:	ff 91       	pop	r31
     3ee:	ef 91       	pop	r30
     3f0:	bf 91       	pop	r27
     3f2:	af 91       	pop	r26
     3f4:	9f 91       	pop	r25
     3f6:	8f 91       	pop	r24
     3f8:	7f 91       	pop	r23
     3fa:	6f 91       	pop	r22
     3fc:	5f 91       	pop	r21
     3fe:	4f 91       	pop	r20
     400:	3f 91       	pop	r19
     402:	2f 91       	pop	r18
     404:	ff 90       	pop	r15
     406:	ef 90       	pop	r14
     408:	df 90       	pop	r13
     40a:	cf 90       	pop	r12
     40c:	bf 90       	pop	r11
     40e:	af 90       	pop	r10
     410:	9f 90       	pop	r9
     412:	8f 90       	pop	r8
     414:	0f 90       	pop	r0
     416:	0b be       	out	0x3b, r0	; 59
     418:	0f 90       	pop	r0
     41a:	0f be       	out	0x3f, r0	; 63
     41c:	0f 90       	pop	r0
     41e:	1f 90       	pop	r1
     420:	18 95       	reti

00000422 <timer2Init>:

/************************************************************************/
/* Initialize timer 2 which is used for an ultrasonic sensor.			*/
/************************************************************************/
void timer2Init(void) {
	TIMSK |= 0b01000000; // Enable overflow interupt.
     422:	87 b7       	in	r24, 0x37	; 55
     424:	80 64       	ori	r24, 0x40	; 64
     426:	87 bf       	out	0x37, r24	; 55
	sei();
     428:	78 94       	sei
	TCCR2 = 0b0000;
     42a:	15 bc       	out	0x25, r1	; 37
     42c:	08 95       	ret

0000042e <timer0Init>:
/************************************************************************/
/* Initialize timer 0 which is used for buzzer.							*/
/************************************************************************/

void timer0Init(void){
	TCCR0 = 0b00001011; // Turn on CTC. Prescaler on 256.
     42e:	8b e0       	ldi	r24, 0x0B	; 11
     430:	83 bf       	out	0x33, r24	; 51
	TIMSK |= BIT(1); // Set timer/counter 0 to compare match interupt. 31,250
     432:	87 b7       	in	r24, 0x37	; 55
     434:	82 60       	ori	r24, 0x02	; 2
     436:	87 bf       	out	0x37, r24	; 55
	OCR0 = 100;
     438:	84 e6       	ldi	r24, 0x64	; 100
     43a:	81 bf       	out	0x31, r24	; 49
	DDRB |= 0x01; //set pin 1 on port B to output
     43c:	87 b3       	in	r24, 0x17	; 23
     43e:	81 60       	ori	r24, 0x01	; 1
     440:	87 bb       	out	0x17, r24	; 23
     442:	08 95       	ret

00000444 <main>:
}

int main(void)
{
	text = malloc(sizeof(char) * 255);
     444:	8f ef       	ldi	r24, 0xFF	; 255
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	16 d2       	rcall	.+1068   	; 0x876 <malloc>
     44a:	90 93 1c 01 	sts	0x011C, r25	; 0x80011c <text+0x1>
     44e:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <text>
	DDRA = 0b01;
     452:	81 e0       	ldi	r24, 0x01	; 1
     454:	8a bb       	out	0x1a, r24	; 26
	wait(1);
     456:	81 e0       	ldi	r24, 0x01	; 1
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	38 d0       	rcall	.+112    	; 0x4cc <wait>
	
	EICRB |= 0b10110000; // set PE 6 and 7 to rising and falling respectively
     45c:	8a b7       	in	r24, 0x3a	; 58
     45e:	80 6b       	ori	r24, 0xB0	; 176
     460:	8a bf       	out	0x3a, r24	; 58
	EIMSK |= 0b11000000; // enable pins 6 and 7.
     462:	89 b7       	in	r24, 0x39	; 57
     464:	80 6c       	ori	r24, 0xC0	; 192
	timer2Init();
     466:	89 bf       	out	0x39, r24	; 57
	timer0Init();
     468:	dc df       	rcall	.-72     	; 0x422 <timer2Init>
	lcd_init_4bits_mode();
     46a:	e1 df       	rcall	.-62     	; 0x42e <timer0Init>
     46c:	50 de       	rcall	.-864    	; 0x10e <lcd_init_4bits_mode>
	
	wait(200);	
     46e:	88 ec       	ldi	r24, 0xC8	; 200
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	2c d0       	rcall	.+88     	; 0x4cc <wait>
     474:	81 e0       	ldi	r24, 0x01	; 1
	while(1)
	{
		PORTA = 0b1;
     476:	8b bb       	out	0x1b, r24	; 27
     478:	8a e1       	ldi	r24, 0x1A	; 26
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     47a:	8a 95       	dec	r24
     47c:	f1 f7       	brne	.-4      	; 0x47a <main+0x36>
     47e:	00 c0       	rjmp	.+0      	; 0x480 <main+0x3c>
     480:	1b ba       	out	0x1b, r1	; 27
		_delay_us(10);
		PORTA = 0;
     482:	60 91 13 01 	lds	r22, 0x0113	; 0x800113 <distance>


		sprintf(text, "%d", (int) distance);
     486:	70 91 14 01 	lds	r23, 0x0114	; 0x800114 <distance+0x1>
     48a:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <distance+0x2>
     48e:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <distance+0x3>
     492:	93 d0       	rcall	.+294    	; 0x5ba <__fixsfsi>
     494:	7f 93       	push	r23
     496:	6f 93       	push	r22
     498:	86 e0       	ldi	r24, 0x06	; 6
     49a:	91 e0       	ldi	r25, 0x01	; 1
     49c:	9f 93       	push	r25
     49e:	8f 93       	push	r24
     4a0:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <text+0x1>
     4a4:	8f 93       	push	r24
     4a6:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <text>
     4aa:	8f 93       	push	r24
     4ac:	05 d3       	rcall	.+1546   	; 0xab8 <sprintf>
		lcd_write_string(text);
     4ae:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <text>
     4b2:	90 91 1c 01 	lds	r25, 0x011C	; 0x80011c <text+0x1>
     4b6:	6f de       	rcall	.-802    	; 0x196 <lcd_write_string>
     4b8:	84 e6       	ldi	r24, 0x64	; 100
		wait(100);
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	07 d0       	rcall	.+14     	; 0x4cc <wait>
     4be:	0f 90       	pop	r0
     4c0:	0f 90       	pop	r0
     4c2:	0f 90       	pop	r0
     4c4:	0f 90       	pop	r0
     4c6:	0f 90       	pop	r0
     4c8:	0f 90       	pop	r0
     4ca:	d4 cf       	rjmp	.-88     	; 0x474 <main+0x30>

000004cc <wait>:
#endif


#include <util/delay.h>
void wait( int ms ) {
	for (int i=0; i<ms; i++) {
     4cc:	20 e0       	ldi	r18, 0x00	; 0
     4ce:	30 e0       	ldi	r19, 0x00	; 0
     4d0:	08 c0       	rjmp	.+16     	; 0x4e2 <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4d2:	ef ec       	ldi	r30, 0xCF	; 207
     4d4:	f7 e0       	ldi	r31, 0x07	; 7
     4d6:	31 97       	sbiw	r30, 0x01	; 1
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <wait+0xa>
     4da:	00 c0       	rjmp	.+0      	; 0x4dc <wait+0x10>
     4dc:	00 00       	nop
     4de:	2f 5f       	subi	r18, 0xFF	; 255
     4e0:	3f 4f       	sbci	r19, 0xFF	; 255
     4e2:	28 17       	cp	r18, r24
     4e4:	39 07       	cpc	r19, r25
     4e6:	ac f3       	brlt	.-22     	; 0x4d2 <wait+0x6>
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
     4e8:	08 95       	ret

000004ea <__divsf3>:
     4ea:	0c d0       	rcall	.+24     	; 0x504 <__divsf3x>
     4ec:	3d c1       	rjmp	.+634    	; 0x768 <__fp_round>
     4ee:	35 d1       	rcall	.+618    	; 0x75a <__fp_pscB>
     4f0:	40 f0       	brcs	.+16     	; 0x502 <__divsf3+0x18>
     4f2:	2c d1       	rcall	.+600    	; 0x74c <__fp_pscA>
     4f4:	30 f0       	brcs	.+12     	; 0x502 <__divsf3+0x18>
     4f6:	21 f4       	brne	.+8      	; 0x500 <__divsf3+0x16>
     4f8:	5f 3f       	cpi	r21, 0xFF	; 255
     4fa:	19 f0       	breq	.+6      	; 0x502 <__divsf3+0x18>
     4fc:	0e c1       	rjmp	.+540    	; 0x71a <__fp_inf>
     4fe:	51 11       	cpse	r21, r1
     500:	67 c1       	rjmp	.+718    	; 0x7d0 <__fp_szero>
     502:	11 c1       	rjmp	.+546    	; 0x726 <__fp_nan>

00000504 <__divsf3x>:
     504:	42 d1       	rcall	.+644    	; 0x78a <__fp_split3>
     506:	98 f3       	brcs	.-26     	; 0x4ee <__divsf3+0x4>

00000508 <__divsf3_pse>:
     508:	99 23       	and	r25, r25
     50a:	c9 f3       	breq	.-14     	; 0x4fe <__divsf3+0x14>
     50c:	55 23       	and	r21, r21
     50e:	b1 f3       	breq	.-20     	; 0x4fc <__divsf3+0x12>
     510:	95 1b       	sub	r25, r21
     512:	55 0b       	sbc	r21, r21
     514:	bb 27       	eor	r27, r27
     516:	aa 27       	eor	r26, r26
     518:	62 17       	cp	r22, r18
     51a:	73 07       	cpc	r23, r19
     51c:	84 07       	cpc	r24, r20
     51e:	38 f0       	brcs	.+14     	; 0x52e <__divsf3_pse+0x26>
     520:	9f 5f       	subi	r25, 0xFF	; 255
     522:	5f 4f       	sbci	r21, 0xFF	; 255
     524:	22 0f       	add	r18, r18
     526:	33 1f       	adc	r19, r19
     528:	44 1f       	adc	r20, r20
     52a:	aa 1f       	adc	r26, r26
     52c:	a9 f3       	breq	.-22     	; 0x518 <__divsf3_pse+0x10>
     52e:	33 d0       	rcall	.+102    	; 0x596 <__divsf3_pse+0x8e>
     530:	0e 2e       	mov	r0, r30
     532:	3a f0       	brmi	.+14     	; 0x542 <__divsf3_pse+0x3a>
     534:	e0 e8       	ldi	r30, 0x80	; 128
     536:	30 d0       	rcall	.+96     	; 0x598 <__divsf3_pse+0x90>
     538:	91 50       	subi	r25, 0x01	; 1
     53a:	50 40       	sbci	r21, 0x00	; 0
     53c:	e6 95       	lsr	r30
     53e:	00 1c       	adc	r0, r0
     540:	ca f7       	brpl	.-14     	; 0x534 <__divsf3_pse+0x2c>
     542:	29 d0       	rcall	.+82     	; 0x596 <__divsf3_pse+0x8e>
     544:	fe 2f       	mov	r31, r30
     546:	27 d0       	rcall	.+78     	; 0x596 <__divsf3_pse+0x8e>
     548:	66 0f       	add	r22, r22
     54a:	77 1f       	adc	r23, r23
     54c:	88 1f       	adc	r24, r24
     54e:	bb 1f       	adc	r27, r27
     550:	26 17       	cp	r18, r22
     552:	37 07       	cpc	r19, r23
     554:	48 07       	cpc	r20, r24
     556:	ab 07       	cpc	r26, r27
     558:	b0 e8       	ldi	r27, 0x80	; 128
     55a:	09 f0       	breq	.+2      	; 0x55e <__divsf3_pse+0x56>
     55c:	bb 0b       	sbc	r27, r27
     55e:	80 2d       	mov	r24, r0
     560:	bf 01       	movw	r22, r30
     562:	ff 27       	eor	r31, r31
     564:	93 58       	subi	r25, 0x83	; 131
     566:	5f 4f       	sbci	r21, 0xFF	; 255
     568:	2a f0       	brmi	.+10     	; 0x574 <__divsf3_pse+0x6c>
     56a:	9e 3f       	cpi	r25, 0xFE	; 254
     56c:	51 05       	cpc	r21, r1
     56e:	68 f0       	brcs	.+26     	; 0x58a <__divsf3_pse+0x82>
     570:	d4 c0       	rjmp	.+424    	; 0x71a <__fp_inf>
     572:	2e c1       	rjmp	.+604    	; 0x7d0 <__fp_szero>
     574:	5f 3f       	cpi	r21, 0xFF	; 255
     576:	ec f3       	brlt	.-6      	; 0x572 <__divsf3_pse+0x6a>
     578:	98 3e       	cpi	r25, 0xE8	; 232
     57a:	dc f3       	brlt	.-10     	; 0x572 <__divsf3_pse+0x6a>
     57c:	86 95       	lsr	r24
     57e:	77 95       	ror	r23
     580:	67 95       	ror	r22
     582:	b7 95       	ror	r27
     584:	f7 95       	ror	r31
     586:	9f 5f       	subi	r25, 0xFF	; 255
     588:	c9 f7       	brne	.-14     	; 0x57c <__divsf3_pse+0x74>
     58a:	88 0f       	add	r24, r24
     58c:	91 1d       	adc	r25, r1
     58e:	96 95       	lsr	r25
     590:	87 95       	ror	r24
     592:	97 f9       	bld	r25, 7
     594:	08 95       	ret
     596:	e1 e0       	ldi	r30, 0x01	; 1
     598:	66 0f       	add	r22, r22
     59a:	77 1f       	adc	r23, r23
     59c:	88 1f       	adc	r24, r24
     59e:	bb 1f       	adc	r27, r27
     5a0:	62 17       	cp	r22, r18
     5a2:	73 07       	cpc	r23, r19
     5a4:	84 07       	cpc	r24, r20
     5a6:	ba 07       	cpc	r27, r26
     5a8:	20 f0       	brcs	.+8      	; 0x5b2 <__divsf3_pse+0xaa>
     5aa:	62 1b       	sub	r22, r18
     5ac:	73 0b       	sbc	r23, r19
     5ae:	84 0b       	sbc	r24, r20
     5b0:	ba 0b       	sbc	r27, r26
     5b2:	ee 1f       	adc	r30, r30
     5b4:	88 f7       	brcc	.-30     	; 0x598 <__divsf3_pse+0x90>
     5b6:	e0 95       	com	r30
     5b8:	08 95       	ret

000005ba <__fixsfsi>:
     5ba:	04 d0       	rcall	.+8      	; 0x5c4 <__fixunssfsi>
     5bc:	68 94       	set
     5be:	b1 11       	cpse	r27, r1
     5c0:	07 c1       	rjmp	.+526    	; 0x7d0 <__fp_szero>
     5c2:	08 95       	ret

000005c4 <__fixunssfsi>:
     5c4:	ea d0       	rcall	.+468    	; 0x79a <__fp_splitA>
     5c6:	88 f0       	brcs	.+34     	; 0x5ea <__fixunssfsi+0x26>
     5c8:	9f 57       	subi	r25, 0x7F	; 127
     5ca:	90 f0       	brcs	.+36     	; 0x5f0 <__fixunssfsi+0x2c>
     5cc:	b9 2f       	mov	r27, r25
     5ce:	99 27       	eor	r25, r25
     5d0:	b7 51       	subi	r27, 0x17	; 23
     5d2:	a0 f0       	brcs	.+40     	; 0x5fc <__fixunssfsi+0x38>
     5d4:	d1 f0       	breq	.+52     	; 0x60a <__fixunssfsi+0x46>
     5d6:	66 0f       	add	r22, r22
     5d8:	77 1f       	adc	r23, r23
     5da:	88 1f       	adc	r24, r24
     5dc:	99 1f       	adc	r25, r25
     5de:	1a f0       	brmi	.+6      	; 0x5e6 <__fixunssfsi+0x22>
     5e0:	ba 95       	dec	r27
     5e2:	c9 f7       	brne	.-14     	; 0x5d6 <__fixunssfsi+0x12>
     5e4:	12 c0       	rjmp	.+36     	; 0x60a <__fixunssfsi+0x46>
     5e6:	b1 30       	cpi	r27, 0x01	; 1
     5e8:	81 f0       	breq	.+32     	; 0x60a <__fixunssfsi+0x46>
     5ea:	f1 d0       	rcall	.+482    	; 0x7ce <__fp_zero>
     5ec:	b1 e0       	ldi	r27, 0x01	; 1
     5ee:	08 95       	ret
     5f0:	ee c0       	rjmp	.+476    	; 0x7ce <__fp_zero>
     5f2:	67 2f       	mov	r22, r23
     5f4:	78 2f       	mov	r23, r24
     5f6:	88 27       	eor	r24, r24
     5f8:	b8 5f       	subi	r27, 0xF8	; 248
     5fa:	39 f0       	breq	.+14     	; 0x60a <__fixunssfsi+0x46>
     5fc:	b9 3f       	cpi	r27, 0xF9	; 249
     5fe:	cc f3       	brlt	.-14     	; 0x5f2 <__fixunssfsi+0x2e>
     600:	86 95       	lsr	r24
     602:	77 95       	ror	r23
     604:	67 95       	ror	r22
     606:	b3 95       	inc	r27
     608:	d9 f7       	brne	.-10     	; 0x600 <__fixunssfsi+0x3c>
     60a:	3e f4       	brtc	.+14     	; 0x61a <__fixunssfsi+0x56>
     60c:	90 95       	com	r25
     60e:	80 95       	com	r24
     610:	70 95       	com	r23
     612:	61 95       	neg	r22
     614:	7f 4f       	sbci	r23, 0xFF	; 255
     616:	8f 4f       	sbci	r24, 0xFF	; 255
     618:	9f 4f       	sbci	r25, 0xFF	; 255
     61a:	08 95       	ret

0000061c <__floatdisf>:
     61c:	97 fb       	bst	r25, 7
     61e:	0e f4       	brtc	.+2      	; 0x622 <__floatdisf+0x6>
     620:	85 d0       	rcall	.+266    	; 0x72c <__fp_negdi>
     622:	3e c0       	rjmp	.+124    	; 0x6a0 <__fp_di2sf>

00000624 <__floatunsisf>:
     624:	e8 94       	clt
     626:	09 c0       	rjmp	.+18     	; 0x63a <__floatsisf+0x12>

00000628 <__floatsisf>:
     628:	97 fb       	bst	r25, 7
     62a:	3e f4       	brtc	.+14     	; 0x63a <__floatsisf+0x12>
     62c:	90 95       	com	r25
     62e:	80 95       	com	r24
     630:	70 95       	com	r23
     632:	61 95       	neg	r22
     634:	7f 4f       	sbci	r23, 0xFF	; 255
     636:	8f 4f       	sbci	r24, 0xFF	; 255
     638:	9f 4f       	sbci	r25, 0xFF	; 255
     63a:	99 23       	and	r25, r25
     63c:	a9 f0       	breq	.+42     	; 0x668 <__floatsisf+0x40>
     63e:	f9 2f       	mov	r31, r25
     640:	96 e9       	ldi	r25, 0x96	; 150
     642:	bb 27       	eor	r27, r27
     644:	93 95       	inc	r25
     646:	f6 95       	lsr	r31
     648:	87 95       	ror	r24
     64a:	77 95       	ror	r23
     64c:	67 95       	ror	r22
     64e:	b7 95       	ror	r27
     650:	f1 11       	cpse	r31, r1
     652:	f8 cf       	rjmp	.-16     	; 0x644 <__floatsisf+0x1c>
     654:	fa f4       	brpl	.+62     	; 0x694 <__floatsisf+0x6c>
     656:	bb 0f       	add	r27, r27
     658:	11 f4       	brne	.+4      	; 0x65e <__floatsisf+0x36>
     65a:	60 ff       	sbrs	r22, 0
     65c:	1b c0       	rjmp	.+54     	; 0x694 <__floatsisf+0x6c>
     65e:	6f 5f       	subi	r22, 0xFF	; 255
     660:	7f 4f       	sbci	r23, 0xFF	; 255
     662:	8f 4f       	sbci	r24, 0xFF	; 255
     664:	9f 4f       	sbci	r25, 0xFF	; 255
     666:	16 c0       	rjmp	.+44     	; 0x694 <__floatsisf+0x6c>
     668:	88 23       	and	r24, r24
     66a:	11 f0       	breq	.+4      	; 0x670 <__floatsisf+0x48>
     66c:	96 e9       	ldi	r25, 0x96	; 150
     66e:	11 c0       	rjmp	.+34     	; 0x692 <__floatsisf+0x6a>
     670:	77 23       	and	r23, r23
     672:	21 f0       	breq	.+8      	; 0x67c <__floatsisf+0x54>
     674:	9e e8       	ldi	r25, 0x8E	; 142
     676:	87 2f       	mov	r24, r23
     678:	76 2f       	mov	r23, r22
     67a:	05 c0       	rjmp	.+10     	; 0x686 <__floatsisf+0x5e>
     67c:	66 23       	and	r22, r22
     67e:	71 f0       	breq	.+28     	; 0x69c <__floatsisf+0x74>
     680:	96 e8       	ldi	r25, 0x86	; 134
     682:	86 2f       	mov	r24, r22
     684:	70 e0       	ldi	r23, 0x00	; 0
     686:	60 e0       	ldi	r22, 0x00	; 0
     688:	2a f0       	brmi	.+10     	; 0x694 <__floatsisf+0x6c>
     68a:	9a 95       	dec	r25
     68c:	66 0f       	add	r22, r22
     68e:	77 1f       	adc	r23, r23
     690:	88 1f       	adc	r24, r24
     692:	da f7       	brpl	.-10     	; 0x68a <__floatsisf+0x62>
     694:	88 0f       	add	r24, r24
     696:	96 95       	lsr	r25
     698:	87 95       	ror	r24
     69a:	97 f9       	bld	r25, 7
     69c:	08 95       	ret

0000069e <__floatundisf>:
     69e:	e8 94       	clt

000006a0 <__fp_di2sf>:
     6a0:	f9 2f       	mov	r31, r25
     6a2:	96 eb       	ldi	r25, 0xB6	; 182
     6a4:	ff 23       	and	r31, r31
     6a6:	81 f0       	breq	.+32     	; 0x6c8 <__fp_di2sf+0x28>
     6a8:	12 16       	cp	r1, r18
     6aa:	13 06       	cpc	r1, r19
     6ac:	14 06       	cpc	r1, r20
     6ae:	44 0b       	sbc	r20, r20
     6b0:	93 95       	inc	r25
     6b2:	f6 95       	lsr	r31
     6b4:	87 95       	ror	r24
     6b6:	77 95       	ror	r23
     6b8:	67 95       	ror	r22
     6ba:	57 95       	ror	r21
     6bc:	40 40       	sbci	r20, 0x00	; 0
     6be:	ff 23       	and	r31, r31
     6c0:	b9 f7       	brne	.-18     	; 0x6b0 <__fp_di2sf+0x10>
     6c2:	1b c0       	rjmp	.+54     	; 0x6fa <__fp_di2sf+0x5a>
     6c4:	99 27       	eor	r25, r25
     6c6:	08 95       	ret
     6c8:	88 23       	and	r24, r24
     6ca:	51 f4       	brne	.+20     	; 0x6e0 <__fp_di2sf+0x40>
     6cc:	98 50       	subi	r25, 0x08	; 8
     6ce:	d2 f7       	brpl	.-12     	; 0x6c4 <__fp_di2sf+0x24>
     6d0:	87 2b       	or	r24, r23
     6d2:	76 2f       	mov	r23, r22
     6d4:	65 2f       	mov	r22, r21
     6d6:	54 2f       	mov	r21, r20
     6d8:	43 2f       	mov	r20, r19
     6da:	32 2f       	mov	r19, r18
     6dc:	20 e0       	ldi	r18, 0x00	; 0
     6de:	b1 f3       	breq	.-20     	; 0x6cc <__fp_di2sf+0x2c>
     6e0:	12 16       	cp	r1, r18
     6e2:	13 06       	cpc	r1, r19
     6e4:	14 06       	cpc	r1, r20
     6e6:	44 0b       	sbc	r20, r20
     6e8:	88 23       	and	r24, r24
     6ea:	3a f0       	brmi	.+14     	; 0x6fa <__fp_di2sf+0x5a>
     6ec:	9a 95       	dec	r25
     6ee:	44 0f       	add	r20, r20
     6f0:	55 1f       	adc	r21, r21
     6f2:	66 1f       	adc	r22, r22
     6f4:	77 1f       	adc	r23, r23
     6f6:	88 1f       	adc	r24, r24
     6f8:	ca f7       	brpl	.-14     	; 0x6ec <__fp_di2sf+0x4c>
     6fa:	55 23       	and	r21, r21
     6fc:	4a f4       	brpl	.+18     	; 0x710 <__fp_di2sf+0x70>
     6fe:	44 0f       	add	r20, r20
     700:	55 1f       	adc	r21, r21
     702:	11 f4       	brne	.+4      	; 0x708 <__fp_di2sf+0x68>
     704:	60 ff       	sbrs	r22, 0
     706:	04 c0       	rjmp	.+8      	; 0x710 <__fp_di2sf+0x70>
     708:	6f 5f       	subi	r22, 0xFF	; 255
     70a:	7f 4f       	sbci	r23, 0xFF	; 255
     70c:	8f 4f       	sbci	r24, 0xFF	; 255
     70e:	9f 4f       	sbci	r25, 0xFF	; 255
     710:	88 0f       	add	r24, r24
     712:	96 95       	lsr	r25
     714:	87 95       	ror	r24
     716:	97 f9       	bld	r25, 7
     718:	08 95       	ret

0000071a <__fp_inf>:
     71a:	97 f9       	bld	r25, 7
     71c:	9f 67       	ori	r25, 0x7F	; 127
     71e:	80 e8       	ldi	r24, 0x80	; 128
     720:	70 e0       	ldi	r23, 0x00	; 0
     722:	60 e0       	ldi	r22, 0x00	; 0
     724:	08 95       	ret

00000726 <__fp_nan>:
     726:	9f ef       	ldi	r25, 0xFF	; 255
     728:	80 ec       	ldi	r24, 0xC0	; 192
     72a:	08 95       	ret

0000072c <__fp_negdi>:
     72c:	90 95       	com	r25
     72e:	80 95       	com	r24
     730:	70 95       	com	r23
     732:	60 95       	com	r22
     734:	50 95       	com	r21
     736:	40 95       	com	r20
     738:	30 95       	com	r19
     73a:	21 95       	neg	r18
     73c:	3f 4f       	sbci	r19, 0xFF	; 255
     73e:	4f 4f       	sbci	r20, 0xFF	; 255
     740:	5f 4f       	sbci	r21, 0xFF	; 255
     742:	6f 4f       	sbci	r22, 0xFF	; 255
     744:	7f 4f       	sbci	r23, 0xFF	; 255
     746:	8f 4f       	sbci	r24, 0xFF	; 255
     748:	9f 4f       	sbci	r25, 0xFF	; 255
     74a:	08 95       	ret

0000074c <__fp_pscA>:
     74c:	00 24       	eor	r0, r0
     74e:	0a 94       	dec	r0
     750:	16 16       	cp	r1, r22
     752:	17 06       	cpc	r1, r23
     754:	18 06       	cpc	r1, r24
     756:	09 06       	cpc	r0, r25
     758:	08 95       	ret

0000075a <__fp_pscB>:
     75a:	00 24       	eor	r0, r0
     75c:	0a 94       	dec	r0
     75e:	12 16       	cp	r1, r18
     760:	13 06       	cpc	r1, r19
     762:	14 06       	cpc	r1, r20
     764:	05 06       	cpc	r0, r21
     766:	08 95       	ret

00000768 <__fp_round>:
     768:	09 2e       	mov	r0, r25
     76a:	03 94       	inc	r0
     76c:	00 0c       	add	r0, r0
     76e:	11 f4       	brne	.+4      	; 0x774 <__fp_round+0xc>
     770:	88 23       	and	r24, r24
     772:	52 f0       	brmi	.+20     	; 0x788 <__fp_round+0x20>
     774:	bb 0f       	add	r27, r27
     776:	40 f4       	brcc	.+16     	; 0x788 <__fp_round+0x20>
     778:	bf 2b       	or	r27, r31
     77a:	11 f4       	brne	.+4      	; 0x780 <__fp_round+0x18>
     77c:	60 ff       	sbrs	r22, 0
     77e:	04 c0       	rjmp	.+8      	; 0x788 <__fp_round+0x20>
     780:	6f 5f       	subi	r22, 0xFF	; 255
     782:	7f 4f       	sbci	r23, 0xFF	; 255
     784:	8f 4f       	sbci	r24, 0xFF	; 255
     786:	9f 4f       	sbci	r25, 0xFF	; 255
     788:	08 95       	ret

0000078a <__fp_split3>:
     78a:	57 fd       	sbrc	r21, 7
     78c:	90 58       	subi	r25, 0x80	; 128
     78e:	44 0f       	add	r20, r20
     790:	55 1f       	adc	r21, r21
     792:	59 f0       	breq	.+22     	; 0x7aa <__fp_splitA+0x10>
     794:	5f 3f       	cpi	r21, 0xFF	; 255
     796:	71 f0       	breq	.+28     	; 0x7b4 <__fp_splitA+0x1a>
     798:	47 95       	ror	r20

0000079a <__fp_splitA>:
     79a:	88 0f       	add	r24, r24
     79c:	97 fb       	bst	r25, 7
     79e:	99 1f       	adc	r25, r25
     7a0:	61 f0       	breq	.+24     	; 0x7ba <__fp_splitA+0x20>
     7a2:	9f 3f       	cpi	r25, 0xFF	; 255
     7a4:	79 f0       	breq	.+30     	; 0x7c4 <__fp_splitA+0x2a>
     7a6:	87 95       	ror	r24
     7a8:	08 95       	ret
     7aa:	12 16       	cp	r1, r18
     7ac:	13 06       	cpc	r1, r19
     7ae:	14 06       	cpc	r1, r20
     7b0:	55 1f       	adc	r21, r21
     7b2:	f2 cf       	rjmp	.-28     	; 0x798 <__fp_split3+0xe>
     7b4:	46 95       	lsr	r20
     7b6:	f1 df       	rcall	.-30     	; 0x79a <__fp_splitA>
     7b8:	08 c0       	rjmp	.+16     	; 0x7ca <__fp_splitA+0x30>
     7ba:	16 16       	cp	r1, r22
     7bc:	17 06       	cpc	r1, r23
     7be:	18 06       	cpc	r1, r24
     7c0:	99 1f       	adc	r25, r25
     7c2:	f1 cf       	rjmp	.-30     	; 0x7a6 <__fp_splitA+0xc>
     7c4:	86 95       	lsr	r24
     7c6:	71 05       	cpc	r23, r1
     7c8:	61 05       	cpc	r22, r1
     7ca:	08 94       	sec
     7cc:	08 95       	ret

000007ce <__fp_zero>:
     7ce:	e8 94       	clt

000007d0 <__fp_szero>:
     7d0:	bb 27       	eor	r27, r27
     7d2:	66 27       	eor	r22, r22
     7d4:	77 27       	eor	r23, r23
     7d6:	cb 01       	movw	r24, r22
     7d8:	97 f9       	bld	r25, 7
     7da:	08 95       	ret

000007dc <__gesf2>:
     7dc:	03 d0       	rcall	.+6      	; 0x7e4 <__fp_cmp>
     7de:	08 f4       	brcc	.+2      	; 0x7e2 <__gesf2+0x6>
     7e0:	8f ef       	ldi	r24, 0xFF	; 255
     7e2:	08 95       	ret

000007e4 <__fp_cmp>:
     7e4:	99 0f       	add	r25, r25
     7e6:	00 08       	sbc	r0, r0
     7e8:	55 0f       	add	r21, r21
     7ea:	aa 0b       	sbc	r26, r26
     7ec:	e0 e8       	ldi	r30, 0x80	; 128
     7ee:	fe ef       	ldi	r31, 0xFE	; 254
     7f0:	16 16       	cp	r1, r22
     7f2:	17 06       	cpc	r1, r23
     7f4:	e8 07       	cpc	r30, r24
     7f6:	f9 07       	cpc	r31, r25
     7f8:	c0 f0       	brcs	.+48     	; 0x82a <__fp_cmp+0x46>
     7fa:	12 16       	cp	r1, r18
     7fc:	13 06       	cpc	r1, r19
     7fe:	e4 07       	cpc	r30, r20
     800:	f5 07       	cpc	r31, r21
     802:	98 f0       	brcs	.+38     	; 0x82a <__fp_cmp+0x46>
     804:	62 1b       	sub	r22, r18
     806:	73 0b       	sbc	r23, r19
     808:	84 0b       	sbc	r24, r20
     80a:	95 0b       	sbc	r25, r21
     80c:	39 f4       	brne	.+14     	; 0x81c <__fp_cmp+0x38>
     80e:	0a 26       	eor	r0, r26
     810:	61 f0       	breq	.+24     	; 0x82a <__fp_cmp+0x46>
     812:	23 2b       	or	r18, r19
     814:	24 2b       	or	r18, r20
     816:	25 2b       	or	r18, r21
     818:	21 f4       	brne	.+8      	; 0x822 <__fp_cmp+0x3e>
     81a:	08 95       	ret
     81c:	0a 26       	eor	r0, r26
     81e:	09 f4       	brne	.+2      	; 0x822 <__fp_cmp+0x3e>
     820:	a1 40       	sbci	r26, 0x01	; 1
     822:	a6 95       	lsr	r26
     824:	8f ef       	ldi	r24, 0xFF	; 255
     826:	81 1d       	adc	r24, r1
     828:	81 1d       	adc	r24, r1
     82a:	08 95       	ret

0000082c <__muluhisi3>:
     82c:	15 d0       	rcall	.+42     	; 0x858 <__umulhisi3>
     82e:	a5 9f       	mul	r26, r21
     830:	90 0d       	add	r25, r0
     832:	b4 9f       	mul	r27, r20
     834:	90 0d       	add	r25, r0
     836:	a4 9f       	mul	r26, r20
     838:	80 0d       	add	r24, r0
     83a:	91 1d       	adc	r25, r1
     83c:	11 24       	eor	r1, r1
     83e:	08 95       	ret

00000840 <__adddi3_s8>:
     840:	00 24       	eor	r0, r0
     842:	a7 fd       	sbrc	r26, 7
     844:	00 94       	com	r0
     846:	2a 0f       	add	r18, r26
     848:	30 1d       	adc	r19, r0
     84a:	40 1d       	adc	r20, r0
     84c:	50 1d       	adc	r21, r0
     84e:	60 1d       	adc	r22, r0
     850:	70 1d       	adc	r23, r0
     852:	80 1d       	adc	r24, r0
     854:	90 1d       	adc	r25, r0
     856:	08 95       	ret

00000858 <__umulhisi3>:
     858:	a2 9f       	mul	r26, r18
     85a:	b0 01       	movw	r22, r0
     85c:	b3 9f       	mul	r27, r19
     85e:	c0 01       	movw	r24, r0
     860:	a3 9f       	mul	r26, r19
     862:	70 0d       	add	r23, r0
     864:	81 1d       	adc	r24, r1
     866:	11 24       	eor	r1, r1
     868:	91 1d       	adc	r25, r1
     86a:	b2 9f       	mul	r27, r18
     86c:	70 0d       	add	r23, r0
     86e:	81 1d       	adc	r24, r1
     870:	11 24       	eor	r1, r1
     872:	91 1d       	adc	r25, r1
     874:	08 95       	ret

00000876 <malloc>:
     876:	0f 93       	push	r16
     878:	1f 93       	push	r17
     87a:	cf 93       	push	r28
     87c:	df 93       	push	r29
     87e:	82 30       	cpi	r24, 0x02	; 2
     880:	91 05       	cpc	r25, r1
     882:	10 f4       	brcc	.+4      	; 0x888 <malloc+0x12>
     884:	82 e0       	ldi	r24, 0x02	; 2
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	e0 91 1f 01 	lds	r30, 0x011F	; 0x80011f <__flp>
     88c:	f0 91 20 01 	lds	r31, 0x0120	; 0x800120 <__flp+0x1>
     890:	20 e0       	ldi	r18, 0x00	; 0
     892:	30 e0       	ldi	r19, 0x00	; 0
     894:	a0 e0       	ldi	r26, 0x00	; 0
     896:	b0 e0       	ldi	r27, 0x00	; 0
     898:	30 97       	sbiw	r30, 0x00	; 0
     89a:	19 f1       	breq	.+70     	; 0x8e2 <malloc+0x6c>
     89c:	40 81       	ld	r20, Z
     89e:	51 81       	ldd	r21, Z+1	; 0x01
     8a0:	02 81       	ldd	r16, Z+2	; 0x02
     8a2:	13 81       	ldd	r17, Z+3	; 0x03
     8a4:	48 17       	cp	r20, r24
     8a6:	59 07       	cpc	r21, r25
     8a8:	c8 f0       	brcs	.+50     	; 0x8dc <malloc+0x66>
     8aa:	84 17       	cp	r24, r20
     8ac:	95 07       	cpc	r25, r21
     8ae:	69 f4       	brne	.+26     	; 0x8ca <malloc+0x54>
     8b0:	10 97       	sbiw	r26, 0x00	; 0
     8b2:	31 f0       	breq	.+12     	; 0x8c0 <malloc+0x4a>
     8b4:	12 96       	adiw	r26, 0x02	; 2
     8b6:	0c 93       	st	X, r16
     8b8:	12 97       	sbiw	r26, 0x02	; 2
     8ba:	13 96       	adiw	r26, 0x03	; 3
     8bc:	1c 93       	st	X, r17
     8be:	27 c0       	rjmp	.+78     	; 0x90e <malloc+0x98>
     8c0:	00 93 1f 01 	sts	0x011F, r16	; 0x80011f <__flp>
     8c4:	10 93 20 01 	sts	0x0120, r17	; 0x800120 <__flp+0x1>
     8c8:	22 c0       	rjmp	.+68     	; 0x90e <malloc+0x98>
     8ca:	21 15       	cp	r18, r1
     8cc:	31 05       	cpc	r19, r1
     8ce:	19 f0       	breq	.+6      	; 0x8d6 <malloc+0x60>
     8d0:	42 17       	cp	r20, r18
     8d2:	53 07       	cpc	r21, r19
     8d4:	18 f4       	brcc	.+6      	; 0x8dc <malloc+0x66>
     8d6:	9a 01       	movw	r18, r20
     8d8:	bd 01       	movw	r22, r26
     8da:	ef 01       	movw	r28, r30
     8dc:	df 01       	movw	r26, r30
     8de:	f8 01       	movw	r30, r16
     8e0:	db cf       	rjmp	.-74     	; 0x898 <malloc+0x22>
     8e2:	21 15       	cp	r18, r1
     8e4:	31 05       	cpc	r19, r1
     8e6:	f9 f0       	breq	.+62     	; 0x926 <malloc+0xb0>
     8e8:	28 1b       	sub	r18, r24
     8ea:	39 0b       	sbc	r19, r25
     8ec:	24 30       	cpi	r18, 0x04	; 4
     8ee:	31 05       	cpc	r19, r1
     8f0:	80 f4       	brcc	.+32     	; 0x912 <malloc+0x9c>
     8f2:	8a 81       	ldd	r24, Y+2	; 0x02
     8f4:	9b 81       	ldd	r25, Y+3	; 0x03
     8f6:	61 15       	cp	r22, r1
     8f8:	71 05       	cpc	r23, r1
     8fa:	21 f0       	breq	.+8      	; 0x904 <malloc+0x8e>
     8fc:	fb 01       	movw	r30, r22
     8fe:	93 83       	std	Z+3, r25	; 0x03
     900:	82 83       	std	Z+2, r24	; 0x02
     902:	04 c0       	rjmp	.+8      	; 0x90c <malloc+0x96>
     904:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <__flp+0x1>
     908:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <__flp>
     90c:	fe 01       	movw	r30, r28
     90e:	32 96       	adiw	r30, 0x02	; 2
     910:	44 c0       	rjmp	.+136    	; 0x99a <malloc+0x124>
     912:	fe 01       	movw	r30, r28
     914:	e2 0f       	add	r30, r18
     916:	f3 1f       	adc	r31, r19
     918:	81 93       	st	Z+, r24
     91a:	91 93       	st	Z+, r25
     91c:	22 50       	subi	r18, 0x02	; 2
     91e:	31 09       	sbc	r19, r1
     920:	39 83       	std	Y+1, r19	; 0x01
     922:	28 83       	st	Y, r18
     924:	3a c0       	rjmp	.+116    	; 0x99a <malloc+0x124>
     926:	20 91 1d 01 	lds	r18, 0x011D	; 0x80011d <__brkval>
     92a:	30 91 1e 01 	lds	r19, 0x011E	; 0x80011e <__brkval+0x1>
     92e:	23 2b       	or	r18, r19
     930:	41 f4       	brne	.+16     	; 0x942 <malloc+0xcc>
     932:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     936:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     93a:	30 93 1e 01 	sts	0x011E, r19	; 0x80011e <__brkval+0x1>
     93e:	20 93 1d 01 	sts	0x011D, r18	; 0x80011d <__brkval>
     942:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     946:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     94a:	21 15       	cp	r18, r1
     94c:	31 05       	cpc	r19, r1
     94e:	41 f4       	brne	.+16     	; 0x960 <malloc+0xea>
     950:	2d b7       	in	r18, 0x3d	; 61
     952:	3e b7       	in	r19, 0x3e	; 62
     954:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     958:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     95c:	24 1b       	sub	r18, r20
     95e:	35 0b       	sbc	r19, r21
     960:	e0 91 1d 01 	lds	r30, 0x011D	; 0x80011d <__brkval>
     964:	f0 91 1e 01 	lds	r31, 0x011E	; 0x80011e <__brkval+0x1>
     968:	e2 17       	cp	r30, r18
     96a:	f3 07       	cpc	r31, r19
     96c:	a0 f4       	brcc	.+40     	; 0x996 <malloc+0x120>
     96e:	2e 1b       	sub	r18, r30
     970:	3f 0b       	sbc	r19, r31
     972:	28 17       	cp	r18, r24
     974:	39 07       	cpc	r19, r25
     976:	78 f0       	brcs	.+30     	; 0x996 <malloc+0x120>
     978:	ac 01       	movw	r20, r24
     97a:	4e 5f       	subi	r20, 0xFE	; 254
     97c:	5f 4f       	sbci	r21, 0xFF	; 255
     97e:	24 17       	cp	r18, r20
     980:	35 07       	cpc	r19, r21
     982:	48 f0       	brcs	.+18     	; 0x996 <malloc+0x120>
     984:	4e 0f       	add	r20, r30
     986:	5f 1f       	adc	r21, r31
     988:	50 93 1e 01 	sts	0x011E, r21	; 0x80011e <__brkval+0x1>
     98c:	40 93 1d 01 	sts	0x011D, r20	; 0x80011d <__brkval>
     990:	81 93       	st	Z+, r24
     992:	91 93       	st	Z+, r25
     994:	02 c0       	rjmp	.+4      	; 0x99a <malloc+0x124>
     996:	e0 e0       	ldi	r30, 0x00	; 0
     998:	f0 e0       	ldi	r31, 0x00	; 0
     99a:	cf 01       	movw	r24, r30
     99c:	df 91       	pop	r29
     99e:	cf 91       	pop	r28
     9a0:	1f 91       	pop	r17
     9a2:	0f 91       	pop	r16
     9a4:	08 95       	ret

000009a6 <free>:
     9a6:	cf 93       	push	r28
     9a8:	df 93       	push	r29
     9aa:	00 97       	sbiw	r24, 0x00	; 0
     9ac:	09 f4       	brne	.+2      	; 0x9b0 <free+0xa>
     9ae:	81 c0       	rjmp	.+258    	; 0xab2 <free+0x10c>
     9b0:	fc 01       	movw	r30, r24
     9b2:	32 97       	sbiw	r30, 0x02	; 2
     9b4:	13 82       	std	Z+3, r1	; 0x03
     9b6:	12 82       	std	Z+2, r1	; 0x02
     9b8:	a0 91 1f 01 	lds	r26, 0x011F	; 0x80011f <__flp>
     9bc:	b0 91 20 01 	lds	r27, 0x0120	; 0x800120 <__flp+0x1>
     9c0:	10 97       	sbiw	r26, 0x00	; 0
     9c2:	81 f4       	brne	.+32     	; 0x9e4 <free+0x3e>
     9c4:	20 81       	ld	r18, Z
     9c6:	31 81       	ldd	r19, Z+1	; 0x01
     9c8:	82 0f       	add	r24, r18
     9ca:	93 1f       	adc	r25, r19
     9cc:	20 91 1d 01 	lds	r18, 0x011D	; 0x80011d <__brkval>
     9d0:	30 91 1e 01 	lds	r19, 0x011E	; 0x80011e <__brkval+0x1>
     9d4:	28 17       	cp	r18, r24
     9d6:	39 07       	cpc	r19, r25
     9d8:	51 f5       	brne	.+84     	; 0xa2e <free+0x88>
     9da:	f0 93 1e 01 	sts	0x011E, r31	; 0x80011e <__brkval+0x1>
     9de:	e0 93 1d 01 	sts	0x011D, r30	; 0x80011d <__brkval>
     9e2:	67 c0       	rjmp	.+206    	; 0xab2 <free+0x10c>
     9e4:	ed 01       	movw	r28, r26
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	ce 17       	cp	r28, r30
     9ec:	df 07       	cpc	r29, r31
     9ee:	40 f4       	brcc	.+16     	; 0xa00 <free+0x5a>
     9f0:	4a 81       	ldd	r20, Y+2	; 0x02
     9f2:	5b 81       	ldd	r21, Y+3	; 0x03
     9f4:	9e 01       	movw	r18, r28
     9f6:	41 15       	cp	r20, r1
     9f8:	51 05       	cpc	r21, r1
     9fa:	f1 f0       	breq	.+60     	; 0xa38 <free+0x92>
     9fc:	ea 01       	movw	r28, r20
     9fe:	f5 cf       	rjmp	.-22     	; 0x9ea <free+0x44>
     a00:	d3 83       	std	Z+3, r29	; 0x03
     a02:	c2 83       	std	Z+2, r28	; 0x02
     a04:	40 81       	ld	r20, Z
     a06:	51 81       	ldd	r21, Z+1	; 0x01
     a08:	84 0f       	add	r24, r20
     a0a:	95 1f       	adc	r25, r21
     a0c:	c8 17       	cp	r28, r24
     a0e:	d9 07       	cpc	r29, r25
     a10:	59 f4       	brne	.+22     	; 0xa28 <free+0x82>
     a12:	88 81       	ld	r24, Y
     a14:	99 81       	ldd	r25, Y+1	; 0x01
     a16:	84 0f       	add	r24, r20
     a18:	95 1f       	adc	r25, r21
     a1a:	02 96       	adiw	r24, 0x02	; 2
     a1c:	91 83       	std	Z+1, r25	; 0x01
     a1e:	80 83       	st	Z, r24
     a20:	8a 81       	ldd	r24, Y+2	; 0x02
     a22:	9b 81       	ldd	r25, Y+3	; 0x03
     a24:	93 83       	std	Z+3, r25	; 0x03
     a26:	82 83       	std	Z+2, r24	; 0x02
     a28:	21 15       	cp	r18, r1
     a2a:	31 05       	cpc	r19, r1
     a2c:	29 f4       	brne	.+10     	; 0xa38 <free+0x92>
     a2e:	f0 93 20 01 	sts	0x0120, r31	; 0x800120 <__flp+0x1>
     a32:	e0 93 1f 01 	sts	0x011F, r30	; 0x80011f <__flp>
     a36:	3d c0       	rjmp	.+122    	; 0xab2 <free+0x10c>
     a38:	e9 01       	movw	r28, r18
     a3a:	fb 83       	std	Y+3, r31	; 0x03
     a3c:	ea 83       	std	Y+2, r30	; 0x02
     a3e:	49 91       	ld	r20, Y+
     a40:	59 91       	ld	r21, Y+
     a42:	c4 0f       	add	r28, r20
     a44:	d5 1f       	adc	r29, r21
     a46:	ec 17       	cp	r30, r28
     a48:	fd 07       	cpc	r31, r29
     a4a:	61 f4       	brne	.+24     	; 0xa64 <free+0xbe>
     a4c:	80 81       	ld	r24, Z
     a4e:	91 81       	ldd	r25, Z+1	; 0x01
     a50:	84 0f       	add	r24, r20
     a52:	95 1f       	adc	r25, r21
     a54:	02 96       	adiw	r24, 0x02	; 2
     a56:	e9 01       	movw	r28, r18
     a58:	99 83       	std	Y+1, r25	; 0x01
     a5a:	88 83       	st	Y, r24
     a5c:	82 81       	ldd	r24, Z+2	; 0x02
     a5e:	93 81       	ldd	r25, Z+3	; 0x03
     a60:	9b 83       	std	Y+3, r25	; 0x03
     a62:	8a 83       	std	Y+2, r24	; 0x02
     a64:	e0 e0       	ldi	r30, 0x00	; 0
     a66:	f0 e0       	ldi	r31, 0x00	; 0
     a68:	12 96       	adiw	r26, 0x02	; 2
     a6a:	8d 91       	ld	r24, X+
     a6c:	9c 91       	ld	r25, X
     a6e:	13 97       	sbiw	r26, 0x03	; 3
     a70:	00 97       	sbiw	r24, 0x00	; 0
     a72:	19 f0       	breq	.+6      	; 0xa7a <free+0xd4>
     a74:	fd 01       	movw	r30, r26
     a76:	dc 01       	movw	r26, r24
     a78:	f7 cf       	rjmp	.-18     	; 0xa68 <free+0xc2>
     a7a:	8d 91       	ld	r24, X+
     a7c:	9c 91       	ld	r25, X
     a7e:	11 97       	sbiw	r26, 0x01	; 1
     a80:	9d 01       	movw	r18, r26
     a82:	2e 5f       	subi	r18, 0xFE	; 254
     a84:	3f 4f       	sbci	r19, 0xFF	; 255
     a86:	82 0f       	add	r24, r18
     a88:	93 1f       	adc	r25, r19
     a8a:	20 91 1d 01 	lds	r18, 0x011D	; 0x80011d <__brkval>
     a8e:	30 91 1e 01 	lds	r19, 0x011E	; 0x80011e <__brkval+0x1>
     a92:	28 17       	cp	r18, r24
     a94:	39 07       	cpc	r19, r25
     a96:	69 f4       	brne	.+26     	; 0xab2 <free+0x10c>
     a98:	30 97       	sbiw	r30, 0x00	; 0
     a9a:	29 f4       	brne	.+10     	; 0xaa6 <free+0x100>
     a9c:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <__flp+0x1>
     aa0:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <__flp>
     aa4:	02 c0       	rjmp	.+4      	; 0xaaa <free+0x104>
     aa6:	13 82       	std	Z+3, r1	; 0x03
     aa8:	12 82       	std	Z+2, r1	; 0x02
     aaa:	b0 93 1e 01 	sts	0x011E, r27	; 0x80011e <__brkval+0x1>
     aae:	a0 93 1d 01 	sts	0x011D, r26	; 0x80011d <__brkval>
     ab2:	df 91       	pop	r29
     ab4:	cf 91       	pop	r28
     ab6:	08 95       	ret

00000ab8 <sprintf>:
     ab8:	0f 93       	push	r16
     aba:	1f 93       	push	r17
     abc:	cf 93       	push	r28
     abe:	df 93       	push	r29
     ac0:	cd b7       	in	r28, 0x3d	; 61
     ac2:	de b7       	in	r29, 0x3e	; 62
     ac4:	2e 97       	sbiw	r28, 0x0e	; 14
     ac6:	0f b6       	in	r0, 0x3f	; 63
     ac8:	f8 94       	cli
     aca:	de bf       	out	0x3e, r29	; 62
     acc:	0f be       	out	0x3f, r0	; 63
     ace:	cd bf       	out	0x3d, r28	; 61
     ad0:	0d 89       	ldd	r16, Y+21	; 0x15
     ad2:	1e 89       	ldd	r17, Y+22	; 0x16
     ad4:	86 e0       	ldi	r24, 0x06	; 6
     ad6:	8c 83       	std	Y+4, r24	; 0x04
     ad8:	1a 83       	std	Y+2, r17	; 0x02
     ada:	09 83       	std	Y+1, r16	; 0x01
     adc:	8f ef       	ldi	r24, 0xFF	; 255
     ade:	9f e7       	ldi	r25, 0x7F	; 127
     ae0:	9e 83       	std	Y+6, r25	; 0x06
     ae2:	8d 83       	std	Y+5, r24	; 0x05
     ae4:	ae 01       	movw	r20, r28
     ae6:	47 5e       	subi	r20, 0xE7	; 231
     ae8:	5f 4f       	sbci	r21, 0xFF	; 255
     aea:	6f 89       	ldd	r22, Y+23	; 0x17
     aec:	78 8d       	ldd	r23, Y+24	; 0x18
     aee:	ce 01       	movw	r24, r28
     af0:	01 96       	adiw	r24, 0x01	; 1
     af2:	10 d0       	rcall	.+32     	; 0xb14 <vfprintf>
     af4:	ef 81       	ldd	r30, Y+7	; 0x07
     af6:	f8 85       	ldd	r31, Y+8	; 0x08
     af8:	e0 0f       	add	r30, r16
     afa:	f1 1f       	adc	r31, r17
     afc:	10 82       	st	Z, r1
     afe:	2e 96       	adiw	r28, 0x0e	; 14
     b00:	0f b6       	in	r0, 0x3f	; 63
     b02:	f8 94       	cli
     b04:	de bf       	out	0x3e, r29	; 62
     b06:	0f be       	out	0x3f, r0	; 63
     b08:	cd bf       	out	0x3d, r28	; 61
     b0a:	df 91       	pop	r29
     b0c:	cf 91       	pop	r28
     b0e:	1f 91       	pop	r17
     b10:	0f 91       	pop	r16
     b12:	08 95       	ret

00000b14 <vfprintf>:
     b14:	2f 92       	push	r2
     b16:	3f 92       	push	r3
     b18:	4f 92       	push	r4
     b1a:	5f 92       	push	r5
     b1c:	6f 92       	push	r6
     b1e:	7f 92       	push	r7
     b20:	8f 92       	push	r8
     b22:	9f 92       	push	r9
     b24:	af 92       	push	r10
     b26:	bf 92       	push	r11
     b28:	cf 92       	push	r12
     b2a:	df 92       	push	r13
     b2c:	ef 92       	push	r14
     b2e:	ff 92       	push	r15
     b30:	0f 93       	push	r16
     b32:	1f 93       	push	r17
     b34:	cf 93       	push	r28
     b36:	df 93       	push	r29
     b38:	cd b7       	in	r28, 0x3d	; 61
     b3a:	de b7       	in	r29, 0x3e	; 62
     b3c:	2b 97       	sbiw	r28, 0x0b	; 11
     b3e:	0f b6       	in	r0, 0x3f	; 63
     b40:	f8 94       	cli
     b42:	de bf       	out	0x3e, r29	; 62
     b44:	0f be       	out	0x3f, r0	; 63
     b46:	cd bf       	out	0x3d, r28	; 61
     b48:	6c 01       	movw	r12, r24
     b4a:	7b 01       	movw	r14, r22
     b4c:	8a 01       	movw	r16, r20
     b4e:	fc 01       	movw	r30, r24
     b50:	17 82       	std	Z+7, r1	; 0x07
     b52:	16 82       	std	Z+6, r1	; 0x06
     b54:	83 81       	ldd	r24, Z+3	; 0x03
     b56:	81 ff       	sbrs	r24, 1
     b58:	bf c1       	rjmp	.+894    	; 0xed8 <vfprintf+0x3c4>
     b5a:	ce 01       	movw	r24, r28
     b5c:	01 96       	adiw	r24, 0x01	; 1
     b5e:	3c 01       	movw	r6, r24
     b60:	f6 01       	movw	r30, r12
     b62:	93 81       	ldd	r25, Z+3	; 0x03
     b64:	f7 01       	movw	r30, r14
     b66:	93 fd       	sbrc	r25, 3
     b68:	85 91       	lpm	r24, Z+
     b6a:	93 ff       	sbrs	r25, 3
     b6c:	81 91       	ld	r24, Z+
     b6e:	7f 01       	movw	r14, r30
     b70:	88 23       	and	r24, r24
     b72:	09 f4       	brne	.+2      	; 0xb76 <vfprintf+0x62>
     b74:	ad c1       	rjmp	.+858    	; 0xed0 <vfprintf+0x3bc>
     b76:	85 32       	cpi	r24, 0x25	; 37
     b78:	39 f4       	brne	.+14     	; 0xb88 <vfprintf+0x74>
     b7a:	93 fd       	sbrc	r25, 3
     b7c:	85 91       	lpm	r24, Z+
     b7e:	93 ff       	sbrs	r25, 3
     b80:	81 91       	ld	r24, Z+
     b82:	7f 01       	movw	r14, r30
     b84:	85 32       	cpi	r24, 0x25	; 37
     b86:	21 f4       	brne	.+8      	; 0xb90 <vfprintf+0x7c>
     b88:	b6 01       	movw	r22, r12
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	d6 d1       	rcall	.+940    	; 0xf3a <fputc>
     b8e:	e8 cf       	rjmp	.-48     	; 0xb60 <vfprintf+0x4c>
     b90:	91 2c       	mov	r9, r1
     b92:	21 2c       	mov	r2, r1
     b94:	31 2c       	mov	r3, r1
     b96:	ff e1       	ldi	r31, 0x1F	; 31
     b98:	f3 15       	cp	r31, r3
     b9a:	d8 f0       	brcs	.+54     	; 0xbd2 <vfprintf+0xbe>
     b9c:	8b 32       	cpi	r24, 0x2B	; 43
     b9e:	79 f0       	breq	.+30     	; 0xbbe <vfprintf+0xaa>
     ba0:	38 f4       	brcc	.+14     	; 0xbb0 <vfprintf+0x9c>
     ba2:	80 32       	cpi	r24, 0x20	; 32
     ba4:	79 f0       	breq	.+30     	; 0xbc4 <vfprintf+0xb0>
     ba6:	83 32       	cpi	r24, 0x23	; 35
     ba8:	a1 f4       	brne	.+40     	; 0xbd2 <vfprintf+0xbe>
     baa:	23 2d       	mov	r18, r3
     bac:	20 61       	ori	r18, 0x10	; 16
     bae:	1d c0       	rjmp	.+58     	; 0xbea <vfprintf+0xd6>
     bb0:	8d 32       	cpi	r24, 0x2D	; 45
     bb2:	61 f0       	breq	.+24     	; 0xbcc <vfprintf+0xb8>
     bb4:	80 33       	cpi	r24, 0x30	; 48
     bb6:	69 f4       	brne	.+26     	; 0xbd2 <vfprintf+0xbe>
     bb8:	23 2d       	mov	r18, r3
     bba:	21 60       	ori	r18, 0x01	; 1
     bbc:	16 c0       	rjmp	.+44     	; 0xbea <vfprintf+0xd6>
     bbe:	83 2d       	mov	r24, r3
     bc0:	82 60       	ori	r24, 0x02	; 2
     bc2:	38 2e       	mov	r3, r24
     bc4:	e3 2d       	mov	r30, r3
     bc6:	e4 60       	ori	r30, 0x04	; 4
     bc8:	3e 2e       	mov	r3, r30
     bca:	2a c0       	rjmp	.+84     	; 0xc20 <vfprintf+0x10c>
     bcc:	f3 2d       	mov	r31, r3
     bce:	f8 60       	ori	r31, 0x08	; 8
     bd0:	1d c0       	rjmp	.+58     	; 0xc0c <vfprintf+0xf8>
     bd2:	37 fc       	sbrc	r3, 7
     bd4:	2d c0       	rjmp	.+90     	; 0xc30 <vfprintf+0x11c>
     bd6:	20 ed       	ldi	r18, 0xD0	; 208
     bd8:	28 0f       	add	r18, r24
     bda:	2a 30       	cpi	r18, 0x0A	; 10
     bdc:	40 f0       	brcs	.+16     	; 0xbee <vfprintf+0xda>
     bde:	8e 32       	cpi	r24, 0x2E	; 46
     be0:	b9 f4       	brne	.+46     	; 0xc10 <vfprintf+0xfc>
     be2:	36 fc       	sbrc	r3, 6
     be4:	75 c1       	rjmp	.+746    	; 0xed0 <vfprintf+0x3bc>
     be6:	23 2d       	mov	r18, r3
     be8:	20 64       	ori	r18, 0x40	; 64
     bea:	32 2e       	mov	r3, r18
     bec:	19 c0       	rjmp	.+50     	; 0xc20 <vfprintf+0x10c>
     bee:	36 fe       	sbrs	r3, 6
     bf0:	06 c0       	rjmp	.+12     	; 0xbfe <vfprintf+0xea>
     bf2:	8a e0       	ldi	r24, 0x0A	; 10
     bf4:	98 9e       	mul	r9, r24
     bf6:	20 0d       	add	r18, r0
     bf8:	11 24       	eor	r1, r1
     bfa:	92 2e       	mov	r9, r18
     bfc:	11 c0       	rjmp	.+34     	; 0xc20 <vfprintf+0x10c>
     bfe:	ea e0       	ldi	r30, 0x0A	; 10
     c00:	2e 9e       	mul	r2, r30
     c02:	20 0d       	add	r18, r0
     c04:	11 24       	eor	r1, r1
     c06:	22 2e       	mov	r2, r18
     c08:	f3 2d       	mov	r31, r3
     c0a:	f0 62       	ori	r31, 0x20	; 32
     c0c:	3f 2e       	mov	r3, r31
     c0e:	08 c0       	rjmp	.+16     	; 0xc20 <vfprintf+0x10c>
     c10:	8c 36       	cpi	r24, 0x6C	; 108
     c12:	21 f4       	brne	.+8      	; 0xc1c <vfprintf+0x108>
     c14:	83 2d       	mov	r24, r3
     c16:	80 68       	ori	r24, 0x80	; 128
     c18:	38 2e       	mov	r3, r24
     c1a:	02 c0       	rjmp	.+4      	; 0xc20 <vfprintf+0x10c>
     c1c:	88 36       	cpi	r24, 0x68	; 104
     c1e:	41 f4       	brne	.+16     	; 0xc30 <vfprintf+0x11c>
     c20:	f7 01       	movw	r30, r14
     c22:	93 fd       	sbrc	r25, 3
     c24:	85 91       	lpm	r24, Z+
     c26:	93 ff       	sbrs	r25, 3
     c28:	81 91       	ld	r24, Z+
     c2a:	7f 01       	movw	r14, r30
     c2c:	81 11       	cpse	r24, r1
     c2e:	b3 cf       	rjmp	.-154    	; 0xb96 <vfprintf+0x82>
     c30:	98 2f       	mov	r25, r24
     c32:	9f 7d       	andi	r25, 0xDF	; 223
     c34:	95 54       	subi	r25, 0x45	; 69
     c36:	93 30       	cpi	r25, 0x03	; 3
     c38:	28 f4       	brcc	.+10     	; 0xc44 <vfprintf+0x130>
     c3a:	0c 5f       	subi	r16, 0xFC	; 252
     c3c:	1f 4f       	sbci	r17, 0xFF	; 255
     c3e:	9f e3       	ldi	r25, 0x3F	; 63
     c40:	99 83       	std	Y+1, r25	; 0x01
     c42:	0d c0       	rjmp	.+26     	; 0xc5e <vfprintf+0x14a>
     c44:	83 36       	cpi	r24, 0x63	; 99
     c46:	31 f0       	breq	.+12     	; 0xc54 <vfprintf+0x140>
     c48:	83 37       	cpi	r24, 0x73	; 115
     c4a:	71 f0       	breq	.+28     	; 0xc68 <vfprintf+0x154>
     c4c:	83 35       	cpi	r24, 0x53	; 83
     c4e:	09 f0       	breq	.+2      	; 0xc52 <vfprintf+0x13e>
     c50:	55 c0       	rjmp	.+170    	; 0xcfc <vfprintf+0x1e8>
     c52:	20 c0       	rjmp	.+64     	; 0xc94 <vfprintf+0x180>
     c54:	f8 01       	movw	r30, r16
     c56:	80 81       	ld	r24, Z
     c58:	89 83       	std	Y+1, r24	; 0x01
     c5a:	0e 5f       	subi	r16, 0xFE	; 254
     c5c:	1f 4f       	sbci	r17, 0xFF	; 255
     c5e:	88 24       	eor	r8, r8
     c60:	83 94       	inc	r8
     c62:	91 2c       	mov	r9, r1
     c64:	53 01       	movw	r10, r6
     c66:	12 c0       	rjmp	.+36     	; 0xc8c <vfprintf+0x178>
     c68:	28 01       	movw	r4, r16
     c6a:	f2 e0       	ldi	r31, 0x02	; 2
     c6c:	4f 0e       	add	r4, r31
     c6e:	51 1c       	adc	r5, r1
     c70:	f8 01       	movw	r30, r16
     c72:	a0 80       	ld	r10, Z
     c74:	b1 80       	ldd	r11, Z+1	; 0x01
     c76:	36 fe       	sbrs	r3, 6
     c78:	03 c0       	rjmp	.+6      	; 0xc80 <vfprintf+0x16c>
     c7a:	69 2d       	mov	r22, r9
     c7c:	70 e0       	ldi	r23, 0x00	; 0
     c7e:	02 c0       	rjmp	.+4      	; 0xc84 <vfprintf+0x170>
     c80:	6f ef       	ldi	r22, 0xFF	; 255
     c82:	7f ef       	ldi	r23, 0xFF	; 255
     c84:	c5 01       	movw	r24, r10
     c86:	4e d1       	rcall	.+668    	; 0xf24 <strnlen>
     c88:	4c 01       	movw	r8, r24
     c8a:	82 01       	movw	r16, r4
     c8c:	f3 2d       	mov	r31, r3
     c8e:	ff 77       	andi	r31, 0x7F	; 127
     c90:	3f 2e       	mov	r3, r31
     c92:	15 c0       	rjmp	.+42     	; 0xcbe <vfprintf+0x1aa>
     c94:	28 01       	movw	r4, r16
     c96:	22 e0       	ldi	r18, 0x02	; 2
     c98:	42 0e       	add	r4, r18
     c9a:	51 1c       	adc	r5, r1
     c9c:	f8 01       	movw	r30, r16
     c9e:	a0 80       	ld	r10, Z
     ca0:	b1 80       	ldd	r11, Z+1	; 0x01
     ca2:	36 fe       	sbrs	r3, 6
     ca4:	03 c0       	rjmp	.+6      	; 0xcac <vfprintf+0x198>
     ca6:	69 2d       	mov	r22, r9
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	02 c0       	rjmp	.+4      	; 0xcb0 <vfprintf+0x19c>
     cac:	6f ef       	ldi	r22, 0xFF	; 255
     cae:	7f ef       	ldi	r23, 0xFF	; 255
     cb0:	c5 01       	movw	r24, r10
     cb2:	2d d1       	rcall	.+602    	; 0xf0e <strnlen_P>
     cb4:	4c 01       	movw	r8, r24
     cb6:	f3 2d       	mov	r31, r3
     cb8:	f0 68       	ori	r31, 0x80	; 128
     cba:	3f 2e       	mov	r3, r31
     cbc:	82 01       	movw	r16, r4
     cbe:	33 fc       	sbrc	r3, 3
     cc0:	19 c0       	rjmp	.+50     	; 0xcf4 <vfprintf+0x1e0>
     cc2:	82 2d       	mov	r24, r2
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	88 16       	cp	r8, r24
     cc8:	99 06       	cpc	r9, r25
     cca:	a0 f4       	brcc	.+40     	; 0xcf4 <vfprintf+0x1e0>
     ccc:	b6 01       	movw	r22, r12
     cce:	80 e2       	ldi	r24, 0x20	; 32
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	33 d1       	rcall	.+614    	; 0xf3a <fputc>
     cd4:	2a 94       	dec	r2
     cd6:	f5 cf       	rjmp	.-22     	; 0xcc2 <vfprintf+0x1ae>
     cd8:	f5 01       	movw	r30, r10
     cda:	37 fc       	sbrc	r3, 7
     cdc:	85 91       	lpm	r24, Z+
     cde:	37 fe       	sbrs	r3, 7
     ce0:	81 91       	ld	r24, Z+
     ce2:	5f 01       	movw	r10, r30
     ce4:	b6 01       	movw	r22, r12
     ce6:	90 e0       	ldi	r25, 0x00	; 0
     ce8:	28 d1       	rcall	.+592    	; 0xf3a <fputc>
     cea:	21 10       	cpse	r2, r1
     cec:	2a 94       	dec	r2
     cee:	21 e0       	ldi	r18, 0x01	; 1
     cf0:	82 1a       	sub	r8, r18
     cf2:	91 08       	sbc	r9, r1
     cf4:	81 14       	cp	r8, r1
     cf6:	91 04       	cpc	r9, r1
     cf8:	79 f7       	brne	.-34     	; 0xcd8 <vfprintf+0x1c4>
     cfa:	e1 c0       	rjmp	.+450    	; 0xebe <vfprintf+0x3aa>
     cfc:	84 36       	cpi	r24, 0x64	; 100
     cfe:	11 f0       	breq	.+4      	; 0xd04 <vfprintf+0x1f0>
     d00:	89 36       	cpi	r24, 0x69	; 105
     d02:	39 f5       	brne	.+78     	; 0xd52 <vfprintf+0x23e>
     d04:	f8 01       	movw	r30, r16
     d06:	37 fe       	sbrs	r3, 7
     d08:	07 c0       	rjmp	.+14     	; 0xd18 <vfprintf+0x204>
     d0a:	60 81       	ld	r22, Z
     d0c:	71 81       	ldd	r23, Z+1	; 0x01
     d0e:	82 81       	ldd	r24, Z+2	; 0x02
     d10:	93 81       	ldd	r25, Z+3	; 0x03
     d12:	0c 5f       	subi	r16, 0xFC	; 252
     d14:	1f 4f       	sbci	r17, 0xFF	; 255
     d16:	08 c0       	rjmp	.+16     	; 0xd28 <vfprintf+0x214>
     d18:	60 81       	ld	r22, Z
     d1a:	71 81       	ldd	r23, Z+1	; 0x01
     d1c:	07 2e       	mov	r0, r23
     d1e:	00 0c       	add	r0, r0
     d20:	88 0b       	sbc	r24, r24
     d22:	99 0b       	sbc	r25, r25
     d24:	0e 5f       	subi	r16, 0xFE	; 254
     d26:	1f 4f       	sbci	r17, 0xFF	; 255
     d28:	f3 2d       	mov	r31, r3
     d2a:	ff 76       	andi	r31, 0x6F	; 111
     d2c:	3f 2e       	mov	r3, r31
     d2e:	97 ff       	sbrs	r25, 7
     d30:	09 c0       	rjmp	.+18     	; 0xd44 <vfprintf+0x230>
     d32:	90 95       	com	r25
     d34:	80 95       	com	r24
     d36:	70 95       	com	r23
     d38:	61 95       	neg	r22
     d3a:	7f 4f       	sbci	r23, 0xFF	; 255
     d3c:	8f 4f       	sbci	r24, 0xFF	; 255
     d3e:	9f 4f       	sbci	r25, 0xFF	; 255
     d40:	f0 68       	ori	r31, 0x80	; 128
     d42:	3f 2e       	mov	r3, r31
     d44:	2a e0       	ldi	r18, 0x0A	; 10
     d46:	30 e0       	ldi	r19, 0x00	; 0
     d48:	a3 01       	movw	r20, r6
     d4a:	33 d1       	rcall	.+614    	; 0xfb2 <__ultoa_invert>
     d4c:	88 2e       	mov	r8, r24
     d4e:	86 18       	sub	r8, r6
     d50:	44 c0       	rjmp	.+136    	; 0xdda <vfprintf+0x2c6>
     d52:	85 37       	cpi	r24, 0x75	; 117
     d54:	31 f4       	brne	.+12     	; 0xd62 <vfprintf+0x24e>
     d56:	23 2d       	mov	r18, r3
     d58:	2f 7e       	andi	r18, 0xEF	; 239
     d5a:	b2 2e       	mov	r11, r18
     d5c:	2a e0       	ldi	r18, 0x0A	; 10
     d5e:	30 e0       	ldi	r19, 0x00	; 0
     d60:	25 c0       	rjmp	.+74     	; 0xdac <vfprintf+0x298>
     d62:	93 2d       	mov	r25, r3
     d64:	99 7f       	andi	r25, 0xF9	; 249
     d66:	b9 2e       	mov	r11, r25
     d68:	8f 36       	cpi	r24, 0x6F	; 111
     d6a:	c1 f0       	breq	.+48     	; 0xd9c <vfprintf+0x288>
     d6c:	18 f4       	brcc	.+6      	; 0xd74 <vfprintf+0x260>
     d6e:	88 35       	cpi	r24, 0x58	; 88
     d70:	79 f0       	breq	.+30     	; 0xd90 <vfprintf+0x27c>
     d72:	ae c0       	rjmp	.+348    	; 0xed0 <vfprintf+0x3bc>
     d74:	80 37       	cpi	r24, 0x70	; 112
     d76:	19 f0       	breq	.+6      	; 0xd7e <vfprintf+0x26a>
     d78:	88 37       	cpi	r24, 0x78	; 120
     d7a:	21 f0       	breq	.+8      	; 0xd84 <vfprintf+0x270>
     d7c:	a9 c0       	rjmp	.+338    	; 0xed0 <vfprintf+0x3bc>
     d7e:	e9 2f       	mov	r30, r25
     d80:	e0 61       	ori	r30, 0x10	; 16
     d82:	be 2e       	mov	r11, r30
     d84:	b4 fe       	sbrs	r11, 4
     d86:	0d c0       	rjmp	.+26     	; 0xda2 <vfprintf+0x28e>
     d88:	fb 2d       	mov	r31, r11
     d8a:	f4 60       	ori	r31, 0x04	; 4
     d8c:	bf 2e       	mov	r11, r31
     d8e:	09 c0       	rjmp	.+18     	; 0xda2 <vfprintf+0x28e>
     d90:	34 fe       	sbrs	r3, 4
     d92:	0a c0       	rjmp	.+20     	; 0xda8 <vfprintf+0x294>
     d94:	29 2f       	mov	r18, r25
     d96:	26 60       	ori	r18, 0x06	; 6
     d98:	b2 2e       	mov	r11, r18
     d9a:	06 c0       	rjmp	.+12     	; 0xda8 <vfprintf+0x294>
     d9c:	28 e0       	ldi	r18, 0x08	; 8
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	05 c0       	rjmp	.+10     	; 0xdac <vfprintf+0x298>
     da2:	20 e1       	ldi	r18, 0x10	; 16
     da4:	30 e0       	ldi	r19, 0x00	; 0
     da6:	02 c0       	rjmp	.+4      	; 0xdac <vfprintf+0x298>
     da8:	20 e1       	ldi	r18, 0x10	; 16
     daa:	32 e0       	ldi	r19, 0x02	; 2
     dac:	f8 01       	movw	r30, r16
     dae:	b7 fe       	sbrs	r11, 7
     db0:	07 c0       	rjmp	.+14     	; 0xdc0 <vfprintf+0x2ac>
     db2:	60 81       	ld	r22, Z
     db4:	71 81       	ldd	r23, Z+1	; 0x01
     db6:	82 81       	ldd	r24, Z+2	; 0x02
     db8:	93 81       	ldd	r25, Z+3	; 0x03
     dba:	0c 5f       	subi	r16, 0xFC	; 252
     dbc:	1f 4f       	sbci	r17, 0xFF	; 255
     dbe:	06 c0       	rjmp	.+12     	; 0xdcc <vfprintf+0x2b8>
     dc0:	60 81       	ld	r22, Z
     dc2:	71 81       	ldd	r23, Z+1	; 0x01
     dc4:	80 e0       	ldi	r24, 0x00	; 0
     dc6:	90 e0       	ldi	r25, 0x00	; 0
     dc8:	0e 5f       	subi	r16, 0xFE	; 254
     dca:	1f 4f       	sbci	r17, 0xFF	; 255
     dcc:	a3 01       	movw	r20, r6
     dce:	f1 d0       	rcall	.+482    	; 0xfb2 <__ultoa_invert>
     dd0:	88 2e       	mov	r8, r24
     dd2:	86 18       	sub	r8, r6
     dd4:	fb 2d       	mov	r31, r11
     dd6:	ff 77       	andi	r31, 0x7F	; 127
     dd8:	3f 2e       	mov	r3, r31
     dda:	36 fe       	sbrs	r3, 6
     ddc:	0d c0       	rjmp	.+26     	; 0xdf8 <vfprintf+0x2e4>
     dde:	23 2d       	mov	r18, r3
     de0:	2e 7f       	andi	r18, 0xFE	; 254
     de2:	a2 2e       	mov	r10, r18
     de4:	89 14       	cp	r8, r9
     de6:	58 f4       	brcc	.+22     	; 0xdfe <vfprintf+0x2ea>
     de8:	34 fe       	sbrs	r3, 4
     dea:	0b c0       	rjmp	.+22     	; 0xe02 <vfprintf+0x2ee>
     dec:	32 fc       	sbrc	r3, 2
     dee:	09 c0       	rjmp	.+18     	; 0xe02 <vfprintf+0x2ee>
     df0:	83 2d       	mov	r24, r3
     df2:	8e 7e       	andi	r24, 0xEE	; 238
     df4:	a8 2e       	mov	r10, r24
     df6:	05 c0       	rjmp	.+10     	; 0xe02 <vfprintf+0x2ee>
     df8:	b8 2c       	mov	r11, r8
     dfa:	a3 2c       	mov	r10, r3
     dfc:	03 c0       	rjmp	.+6      	; 0xe04 <vfprintf+0x2f0>
     dfe:	b8 2c       	mov	r11, r8
     e00:	01 c0       	rjmp	.+2      	; 0xe04 <vfprintf+0x2f0>
     e02:	b9 2c       	mov	r11, r9
     e04:	a4 fe       	sbrs	r10, 4
     e06:	0f c0       	rjmp	.+30     	; 0xe26 <vfprintf+0x312>
     e08:	fe 01       	movw	r30, r28
     e0a:	e8 0d       	add	r30, r8
     e0c:	f1 1d       	adc	r31, r1
     e0e:	80 81       	ld	r24, Z
     e10:	80 33       	cpi	r24, 0x30	; 48
     e12:	21 f4       	brne	.+8      	; 0xe1c <vfprintf+0x308>
     e14:	9a 2d       	mov	r25, r10
     e16:	99 7e       	andi	r25, 0xE9	; 233
     e18:	a9 2e       	mov	r10, r25
     e1a:	09 c0       	rjmp	.+18     	; 0xe2e <vfprintf+0x31a>
     e1c:	a2 fe       	sbrs	r10, 2
     e1e:	06 c0       	rjmp	.+12     	; 0xe2c <vfprintf+0x318>
     e20:	b3 94       	inc	r11
     e22:	b3 94       	inc	r11
     e24:	04 c0       	rjmp	.+8      	; 0xe2e <vfprintf+0x31a>
     e26:	8a 2d       	mov	r24, r10
     e28:	86 78       	andi	r24, 0x86	; 134
     e2a:	09 f0       	breq	.+2      	; 0xe2e <vfprintf+0x31a>
     e2c:	b3 94       	inc	r11
     e2e:	a3 fc       	sbrc	r10, 3
     e30:	10 c0       	rjmp	.+32     	; 0xe52 <vfprintf+0x33e>
     e32:	a0 fe       	sbrs	r10, 0
     e34:	06 c0       	rjmp	.+12     	; 0xe42 <vfprintf+0x32e>
     e36:	b2 14       	cp	r11, r2
     e38:	80 f4       	brcc	.+32     	; 0xe5a <vfprintf+0x346>
     e3a:	28 0c       	add	r2, r8
     e3c:	92 2c       	mov	r9, r2
     e3e:	9b 18       	sub	r9, r11
     e40:	0d c0       	rjmp	.+26     	; 0xe5c <vfprintf+0x348>
     e42:	b2 14       	cp	r11, r2
     e44:	58 f4       	brcc	.+22     	; 0xe5c <vfprintf+0x348>
     e46:	b6 01       	movw	r22, r12
     e48:	80 e2       	ldi	r24, 0x20	; 32
     e4a:	90 e0       	ldi	r25, 0x00	; 0
     e4c:	76 d0       	rcall	.+236    	; 0xf3a <fputc>
     e4e:	b3 94       	inc	r11
     e50:	f8 cf       	rjmp	.-16     	; 0xe42 <vfprintf+0x32e>
     e52:	b2 14       	cp	r11, r2
     e54:	18 f4       	brcc	.+6      	; 0xe5c <vfprintf+0x348>
     e56:	2b 18       	sub	r2, r11
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <vfprintf+0x34a>
     e5a:	98 2c       	mov	r9, r8
     e5c:	21 2c       	mov	r2, r1
     e5e:	a4 fe       	sbrs	r10, 4
     e60:	0f c0       	rjmp	.+30     	; 0xe80 <vfprintf+0x36c>
     e62:	b6 01       	movw	r22, r12
     e64:	80 e3       	ldi	r24, 0x30	; 48
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	68 d0       	rcall	.+208    	; 0xf3a <fputc>
     e6a:	a2 fe       	sbrs	r10, 2
     e6c:	16 c0       	rjmp	.+44     	; 0xe9a <vfprintf+0x386>
     e6e:	a1 fc       	sbrc	r10, 1
     e70:	03 c0       	rjmp	.+6      	; 0xe78 <vfprintf+0x364>
     e72:	88 e7       	ldi	r24, 0x78	; 120
     e74:	90 e0       	ldi	r25, 0x00	; 0
     e76:	02 c0       	rjmp	.+4      	; 0xe7c <vfprintf+0x368>
     e78:	88 e5       	ldi	r24, 0x58	; 88
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	b6 01       	movw	r22, r12
     e7e:	0c c0       	rjmp	.+24     	; 0xe98 <vfprintf+0x384>
     e80:	8a 2d       	mov	r24, r10
     e82:	86 78       	andi	r24, 0x86	; 134
     e84:	51 f0       	breq	.+20     	; 0xe9a <vfprintf+0x386>
     e86:	a1 fe       	sbrs	r10, 1
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <vfprintf+0x37a>
     e8a:	8b e2       	ldi	r24, 0x2B	; 43
     e8c:	01 c0       	rjmp	.+2      	; 0xe90 <vfprintf+0x37c>
     e8e:	80 e2       	ldi	r24, 0x20	; 32
     e90:	a7 fc       	sbrc	r10, 7
     e92:	8d e2       	ldi	r24, 0x2D	; 45
     e94:	b6 01       	movw	r22, r12
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	50 d0       	rcall	.+160    	; 0xf3a <fputc>
     e9a:	89 14       	cp	r8, r9
     e9c:	30 f4       	brcc	.+12     	; 0xeaa <vfprintf+0x396>
     e9e:	b6 01       	movw	r22, r12
     ea0:	80 e3       	ldi	r24, 0x30	; 48
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	4a d0       	rcall	.+148    	; 0xf3a <fputc>
     ea6:	9a 94       	dec	r9
     ea8:	f8 cf       	rjmp	.-16     	; 0xe9a <vfprintf+0x386>
     eaa:	8a 94       	dec	r8
     eac:	f3 01       	movw	r30, r6
     eae:	e8 0d       	add	r30, r8
     eb0:	f1 1d       	adc	r31, r1
     eb2:	80 81       	ld	r24, Z
     eb4:	b6 01       	movw	r22, r12
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	40 d0       	rcall	.+128    	; 0xf3a <fputc>
     eba:	81 10       	cpse	r8, r1
     ebc:	f6 cf       	rjmp	.-20     	; 0xeaa <vfprintf+0x396>
     ebe:	22 20       	and	r2, r2
     ec0:	09 f4       	brne	.+2      	; 0xec4 <vfprintf+0x3b0>
     ec2:	4e ce       	rjmp	.-868    	; 0xb60 <vfprintf+0x4c>
     ec4:	b6 01       	movw	r22, r12
     ec6:	80 e2       	ldi	r24, 0x20	; 32
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	37 d0       	rcall	.+110    	; 0xf3a <fputc>
     ecc:	2a 94       	dec	r2
     ece:	f7 cf       	rjmp	.-18     	; 0xebe <vfprintf+0x3aa>
     ed0:	f6 01       	movw	r30, r12
     ed2:	86 81       	ldd	r24, Z+6	; 0x06
     ed4:	97 81       	ldd	r25, Z+7	; 0x07
     ed6:	02 c0       	rjmp	.+4      	; 0xedc <vfprintf+0x3c8>
     ed8:	8f ef       	ldi	r24, 0xFF	; 255
     eda:	9f ef       	ldi	r25, 0xFF	; 255
     edc:	2b 96       	adiw	r28, 0x0b	; 11
     ede:	0f b6       	in	r0, 0x3f	; 63
     ee0:	f8 94       	cli
     ee2:	de bf       	out	0x3e, r29	; 62
     ee4:	0f be       	out	0x3f, r0	; 63
     ee6:	cd bf       	out	0x3d, r28	; 61
     ee8:	df 91       	pop	r29
     eea:	cf 91       	pop	r28
     eec:	1f 91       	pop	r17
     eee:	0f 91       	pop	r16
     ef0:	ff 90       	pop	r15
     ef2:	ef 90       	pop	r14
     ef4:	df 90       	pop	r13
     ef6:	cf 90       	pop	r12
     ef8:	bf 90       	pop	r11
     efa:	af 90       	pop	r10
     efc:	9f 90       	pop	r9
     efe:	8f 90       	pop	r8
     f00:	7f 90       	pop	r7
     f02:	6f 90       	pop	r6
     f04:	5f 90       	pop	r5
     f06:	4f 90       	pop	r4
     f08:	3f 90       	pop	r3
     f0a:	2f 90       	pop	r2
     f0c:	08 95       	ret

00000f0e <strnlen_P>:
     f0e:	fc 01       	movw	r30, r24
     f10:	05 90       	lpm	r0, Z+
     f12:	61 50       	subi	r22, 0x01	; 1
     f14:	70 40       	sbci	r23, 0x00	; 0
     f16:	01 10       	cpse	r0, r1
     f18:	d8 f7       	brcc	.-10     	; 0xf10 <strnlen_P+0x2>
     f1a:	80 95       	com	r24
     f1c:	90 95       	com	r25
     f1e:	8e 0f       	add	r24, r30
     f20:	9f 1f       	adc	r25, r31
     f22:	08 95       	ret

00000f24 <strnlen>:
     f24:	fc 01       	movw	r30, r24
     f26:	61 50       	subi	r22, 0x01	; 1
     f28:	70 40       	sbci	r23, 0x00	; 0
     f2a:	01 90       	ld	r0, Z+
     f2c:	01 10       	cpse	r0, r1
     f2e:	d8 f7       	brcc	.-10     	; 0xf26 <strnlen+0x2>
     f30:	80 95       	com	r24
     f32:	90 95       	com	r25
     f34:	8e 0f       	add	r24, r30
     f36:	9f 1f       	adc	r25, r31
     f38:	08 95       	ret

00000f3a <fputc>:
     f3a:	0f 93       	push	r16
     f3c:	1f 93       	push	r17
     f3e:	cf 93       	push	r28
     f40:	df 93       	push	r29
     f42:	fb 01       	movw	r30, r22
     f44:	23 81       	ldd	r18, Z+3	; 0x03
     f46:	21 fd       	sbrc	r18, 1
     f48:	03 c0       	rjmp	.+6      	; 0xf50 <fputc+0x16>
     f4a:	8f ef       	ldi	r24, 0xFF	; 255
     f4c:	9f ef       	ldi	r25, 0xFF	; 255
     f4e:	2c c0       	rjmp	.+88     	; 0xfa8 <fputc+0x6e>
     f50:	22 ff       	sbrs	r18, 2
     f52:	16 c0       	rjmp	.+44     	; 0xf80 <fputc+0x46>
     f54:	46 81       	ldd	r20, Z+6	; 0x06
     f56:	57 81       	ldd	r21, Z+7	; 0x07
     f58:	24 81       	ldd	r18, Z+4	; 0x04
     f5a:	35 81       	ldd	r19, Z+5	; 0x05
     f5c:	42 17       	cp	r20, r18
     f5e:	53 07       	cpc	r21, r19
     f60:	44 f4       	brge	.+16     	; 0xf72 <fputc+0x38>
     f62:	a0 81       	ld	r26, Z
     f64:	b1 81       	ldd	r27, Z+1	; 0x01
     f66:	9d 01       	movw	r18, r26
     f68:	2f 5f       	subi	r18, 0xFF	; 255
     f6a:	3f 4f       	sbci	r19, 0xFF	; 255
     f6c:	31 83       	std	Z+1, r19	; 0x01
     f6e:	20 83       	st	Z, r18
     f70:	8c 93       	st	X, r24
     f72:	26 81       	ldd	r18, Z+6	; 0x06
     f74:	37 81       	ldd	r19, Z+7	; 0x07
     f76:	2f 5f       	subi	r18, 0xFF	; 255
     f78:	3f 4f       	sbci	r19, 0xFF	; 255
     f7a:	37 83       	std	Z+7, r19	; 0x07
     f7c:	26 83       	std	Z+6, r18	; 0x06
     f7e:	14 c0       	rjmp	.+40     	; 0xfa8 <fputc+0x6e>
     f80:	8b 01       	movw	r16, r22
     f82:	ec 01       	movw	r28, r24
     f84:	fb 01       	movw	r30, r22
     f86:	00 84       	ldd	r0, Z+8	; 0x08
     f88:	f1 85       	ldd	r31, Z+9	; 0x09
     f8a:	e0 2d       	mov	r30, r0
     f8c:	09 95       	icall
     f8e:	89 2b       	or	r24, r25
     f90:	e1 f6       	brne	.-72     	; 0xf4a <fputc+0x10>
     f92:	d8 01       	movw	r26, r16
     f94:	16 96       	adiw	r26, 0x06	; 6
     f96:	8d 91       	ld	r24, X+
     f98:	9c 91       	ld	r25, X
     f9a:	17 97       	sbiw	r26, 0x07	; 7
     f9c:	01 96       	adiw	r24, 0x01	; 1
     f9e:	17 96       	adiw	r26, 0x07	; 7
     fa0:	9c 93       	st	X, r25
     fa2:	8e 93       	st	-X, r24
     fa4:	16 97       	sbiw	r26, 0x06	; 6
     fa6:	ce 01       	movw	r24, r28
     fa8:	df 91       	pop	r29
     faa:	cf 91       	pop	r28
     fac:	1f 91       	pop	r17
     fae:	0f 91       	pop	r16
     fb0:	08 95       	ret

00000fb2 <__ultoa_invert>:
     fb2:	fa 01       	movw	r30, r20
     fb4:	aa 27       	eor	r26, r26
     fb6:	28 30       	cpi	r18, 0x08	; 8
     fb8:	51 f1       	breq	.+84     	; 0x100e <__DATA_REGION_LENGTH__+0xe>
     fba:	20 31       	cpi	r18, 0x10	; 16
     fbc:	81 f1       	breq	.+96     	; 0x101e <__DATA_REGION_LENGTH__+0x1e>
     fbe:	e8 94       	clt
     fc0:	6f 93       	push	r22
     fc2:	6e 7f       	andi	r22, 0xFE	; 254
     fc4:	6e 5f       	subi	r22, 0xFE	; 254
     fc6:	7f 4f       	sbci	r23, 0xFF	; 255
     fc8:	8f 4f       	sbci	r24, 0xFF	; 255
     fca:	9f 4f       	sbci	r25, 0xFF	; 255
     fcc:	af 4f       	sbci	r26, 0xFF	; 255
     fce:	b1 e0       	ldi	r27, 0x01	; 1
     fd0:	3e d0       	rcall	.+124    	; 0x104e <__DATA_REGION_LENGTH__+0x4e>
     fd2:	b4 e0       	ldi	r27, 0x04	; 4
     fd4:	3c d0       	rcall	.+120    	; 0x104e <__DATA_REGION_LENGTH__+0x4e>
     fd6:	67 0f       	add	r22, r23
     fd8:	78 1f       	adc	r23, r24
     fda:	89 1f       	adc	r24, r25
     fdc:	9a 1f       	adc	r25, r26
     fde:	a1 1d       	adc	r26, r1
     fe0:	68 0f       	add	r22, r24
     fe2:	79 1f       	adc	r23, r25
     fe4:	8a 1f       	adc	r24, r26
     fe6:	91 1d       	adc	r25, r1
     fe8:	a1 1d       	adc	r26, r1
     fea:	6a 0f       	add	r22, r26
     fec:	71 1d       	adc	r23, r1
     fee:	81 1d       	adc	r24, r1
     ff0:	91 1d       	adc	r25, r1
     ff2:	a1 1d       	adc	r26, r1
     ff4:	20 d0       	rcall	.+64     	; 0x1036 <__DATA_REGION_LENGTH__+0x36>
     ff6:	09 f4       	brne	.+2      	; 0xffa <__ultoa_invert+0x48>
     ff8:	68 94       	set
     ffa:	3f 91       	pop	r19
     ffc:	2a e0       	ldi	r18, 0x0A	; 10
     ffe:	26 9f       	mul	r18, r22
    1000:	11 24       	eor	r1, r1
    1002:	30 19       	sub	r19, r0
    1004:	30 5d       	subi	r19, 0xD0	; 208
    1006:	31 93       	st	Z+, r19
    1008:	de f6       	brtc	.-74     	; 0xfc0 <__ultoa_invert+0xe>
    100a:	cf 01       	movw	r24, r30
    100c:	08 95       	ret
    100e:	46 2f       	mov	r20, r22
    1010:	47 70       	andi	r20, 0x07	; 7
    1012:	40 5d       	subi	r20, 0xD0	; 208
    1014:	41 93       	st	Z+, r20
    1016:	b3 e0       	ldi	r27, 0x03	; 3
    1018:	0f d0       	rcall	.+30     	; 0x1038 <__DATA_REGION_LENGTH__+0x38>
    101a:	c9 f7       	brne	.-14     	; 0x100e <__DATA_REGION_LENGTH__+0xe>
    101c:	f6 cf       	rjmp	.-20     	; 0x100a <__DATA_REGION_LENGTH__+0xa>
    101e:	46 2f       	mov	r20, r22
    1020:	4f 70       	andi	r20, 0x0F	; 15
    1022:	40 5d       	subi	r20, 0xD0	; 208
    1024:	4a 33       	cpi	r20, 0x3A	; 58
    1026:	18 f0       	brcs	.+6      	; 0x102e <__DATA_REGION_LENGTH__+0x2e>
    1028:	49 5d       	subi	r20, 0xD9	; 217
    102a:	31 fd       	sbrc	r19, 1
    102c:	40 52       	subi	r20, 0x20	; 32
    102e:	41 93       	st	Z+, r20
    1030:	02 d0       	rcall	.+4      	; 0x1036 <__DATA_REGION_LENGTH__+0x36>
    1032:	a9 f7       	brne	.-22     	; 0x101e <__DATA_REGION_LENGTH__+0x1e>
    1034:	ea cf       	rjmp	.-44     	; 0x100a <__DATA_REGION_LENGTH__+0xa>
    1036:	b4 e0       	ldi	r27, 0x04	; 4
    1038:	a6 95       	lsr	r26
    103a:	97 95       	ror	r25
    103c:	87 95       	ror	r24
    103e:	77 95       	ror	r23
    1040:	67 95       	ror	r22
    1042:	ba 95       	dec	r27
    1044:	c9 f7       	brne	.-14     	; 0x1038 <__DATA_REGION_LENGTH__+0x38>
    1046:	00 97       	sbiw	r24, 0x00	; 0
    1048:	61 05       	cpc	r22, r1
    104a:	71 05       	cpc	r23, r1
    104c:	08 95       	ret
    104e:	9b 01       	movw	r18, r22
    1050:	ac 01       	movw	r20, r24
    1052:	0a 2e       	mov	r0, r26
    1054:	06 94       	lsr	r0
    1056:	57 95       	ror	r21
    1058:	47 95       	ror	r20
    105a:	37 95       	ror	r19
    105c:	27 95       	ror	r18
    105e:	ba 95       	dec	r27
    1060:	c9 f7       	brne	.-14     	; 0x1054 <__DATA_REGION_LENGTH__+0x54>
    1062:	62 0f       	add	r22, r18
    1064:	73 1f       	adc	r23, r19
    1066:	84 1f       	adc	r24, r20
    1068:	95 1f       	adc	r25, r21
    106a:	a0 1d       	adc	r26, r0
    106c:	08 95       	ret

0000106e <_exit>:
    106e:	f8 94       	cli

00001070 <__stop_program>:
    1070:	ff cf       	rjmp	.-2      	; 0x1070 <__stop_program>
