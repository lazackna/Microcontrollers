
UltraSonic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  0000083e  000008d2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000083e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000f  00800106  00800106  000008d8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008d8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000908  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000058  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000aea  00000000  00000000  0000099c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000091c  00000000  00000000  00001486  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000425  00000000  00000000  00001da2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000011c  00000000  00000000  000021c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004df  00000000  00000000  000022e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000292  00000000  00000000  000027c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000048  00000000  00000000  00002a55  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	55 c0       	rjmp	.+170    	; 0xc8 <__vector_7>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__vector_8>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	b7 c0       	rjmp	.+366    	; 0x198 <__vector_10>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	d3 c0       	rjmp	.+422    	; 0x1e4 <__vector_15>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a6 e0       	ldi	r26, 0x06	; 6
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a5 31       	cpi	r26, 0x15	; 21
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>

000000a8 <__do_copy_data>:
  a8:	11 e0       	ldi	r17, 0x01	; 1
  aa:	a0 e0       	ldi	r26, 0x00	; 0
  ac:	b1 e0       	ldi	r27, 0x01	; 1
  ae:	ee e3       	ldi	r30, 0x3E	; 62
  b0:	f8 e0       	ldi	r31, 0x08	; 8
  b2:	00 e0       	ldi	r16, 0x00	; 0
  b4:	0b bf       	out	0x3b, r16	; 59
  b6:	02 c0       	rjmp	.+4      	; 0xbc <__do_copy_data+0x14>
  b8:	07 90       	elpm	r0, Z+
  ba:	0d 92       	st	X+, r0
  bc:	a6 30       	cpi	r26, 0x06	; 6
  be:	b1 07       	cpc	r27, r17
  c0:	d9 f7       	brne	.-10     	; 0xb8 <__do_copy_data+0x10>
  c2:	c5 d0       	rcall	.+394    	; 0x24e <main>
  c4:	ba c3       	rjmp	.+1908   	; 0x83a <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_7>:
long int TimerOverflow = 0;

double cm = 0;

char * text;
ISR ( INT6_vect ) {
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
	TCNT2 = 0;	// Clear the timer register.
  d4:	14 bc       	out	0x24, r1	; 36
	TimerOverflow = 0;
  d6:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <TimerOverflow>
  da:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <TimerOverflow+0x1>
  de:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <TimerOverflow+0x2>
  e2:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <TimerOverflow+0x3>
	TCCR2 |= 0b001; // Start the timer with no prescaler.
  e6:	85 b5       	in	r24, 0x25	; 37
  e8:	81 60       	ori	r24, 0x01	; 1
  ea:	85 bd       	out	0x25, r24	; 37
}
  ec:	8f 91       	pop	r24
  ee:	0f 90       	pop	r0
  f0:	0f be       	out	0x3f, r0	; 63
  f2:	0f 90       	pop	r0
  f4:	1f 90       	pop	r1
  f6:	18 95       	reti

000000f8 <__vector_8>:

ISR ( INT7_vect ) {
  f8:	1f 92       	push	r1
  fa:	0f 92       	push	r0
  fc:	0f b6       	in	r0, 0x3f	; 63
  fe:	0f 92       	push	r0
 100:	11 24       	eor	r1, r1
 102:	0b b6       	in	r0, 0x3b	; 59
 104:	0f 92       	push	r0
 106:	2f 93       	push	r18
 108:	3f 93       	push	r19
 10a:	4f 93       	push	r20
 10c:	5f 93       	push	r21
 10e:	6f 93       	push	r22
 110:	7f 93       	push	r23
 112:	8f 93       	push	r24
 114:	9f 93       	push	r25
 116:	af 93       	push	r26
 118:	bf 93       	push	r27
 11a:	ef 93       	push	r30
 11c:	ff 93       	push	r31
	TCCR2 &= 0b11111000;	// Stop the timer.
 11e:	85 b5       	in	r24, 0x25	; 37
 120:	88 7f       	andi	r24, 0xF8	; 248
 122:	85 bd       	out	0x25, r24	; 37
	long long int value = TCNT2 + (255 * TimerOverflow); // don't forget to add the current value in the timer.
 124:	e4 b5       	in	r30, 0x24	; 36
 126:	20 91 0b 01 	lds	r18, 0x010B	; 0x80010b <TimerOverflow>
 12a:	30 91 0c 01 	lds	r19, 0x010C	; 0x80010c <TimerOverflow+0x1>
 12e:	40 91 0d 01 	lds	r20, 0x010D	; 0x80010d <TimerOverflow+0x2>
 132:	50 91 0e 01 	lds	r21, 0x010E	; 0x80010e <TimerOverflow+0x3>
 136:	af ef       	ldi	r26, 0xFF	; 255
 138:	b0 e0       	ldi	r27, 0x00	; 0
 13a:	45 d2       	rcall	.+1162   	; 0x5c6 <__muluhisi3>
 13c:	6e 0f       	add	r22, r30
 13e:	71 1d       	adc	r23, r1
 140:	81 1d       	adc	r24, r1
 142:	91 1d       	adc	r25, r1
	TCNT2 = 0;	// Clear the timer register.
 144:	14 bc       	out	0x24, r1	; 36
	TimerOverflow = 0;
 146:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <TimerOverflow>
 14a:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <TimerOverflow+0x1>
 14e:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <TimerOverflow+0x2>
 152:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <TimerOverflow+0x3>
	cm = (double)value / 466.47;
 156:	48 d1       	rcall	.+656    	; 0x3e8 <__floatsisf>
 158:	29 e2       	ldi	r18, 0x29	; 41
 15a:	3c e3       	ldi	r19, 0x3C	; 60
 15c:	49 ee       	ldi	r20, 0xE9	; 233
 15e:	53 e4       	ldi	r21, 0x43	; 67
 160:	ad d0       	rcall	.+346    	; 0x2bc <__divsf3>
 162:	60 93 07 01 	sts	0x0107, r22	; 0x800107 <cm>
 166:	70 93 08 01 	sts	0x0108, r23	; 0x800108 <cm+0x1>
 16a:	80 93 09 01 	sts	0x0109, r24	; 0x800109 <cm+0x2>
 16e:	90 93 0a 01 	sts	0x010A, r25	; 0x80010a <cm+0x3>
}
 172:	ff 91       	pop	r31
 174:	ef 91       	pop	r30
 176:	bf 91       	pop	r27
 178:	af 91       	pop	r26
 17a:	9f 91       	pop	r25
 17c:	8f 91       	pop	r24
 17e:	7f 91       	pop	r23
 180:	6f 91       	pop	r22
 182:	5f 91       	pop	r21
 184:	4f 91       	pop	r20
 186:	3f 91       	pop	r19
 188:	2f 91       	pop	r18
 18a:	0f 90       	pop	r0
 18c:	0b be       	out	0x3b, r0	; 59
 18e:	0f 90       	pop	r0
 190:	0f be       	out	0x3f, r0	; 63
 192:	0f 90       	pop	r0
 194:	1f 90       	pop	r1
 196:	18 95       	reti

00000198 <__vector_10>:

ISR ( TIMER2_OVF_vect ) {
 198:	1f 92       	push	r1
 19a:	0f 92       	push	r0
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	0f 92       	push	r0
 1a0:	11 24       	eor	r1, r1
 1a2:	8f 93       	push	r24
 1a4:	9f 93       	push	r25
 1a6:	af 93       	push	r26
 1a8:	bf 93       	push	r27
	TimerOverflow+= 1;
 1aa:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <TimerOverflow>
 1ae:	90 91 0c 01 	lds	r25, 0x010C	; 0x80010c <TimerOverflow+0x1>
 1b2:	a0 91 0d 01 	lds	r26, 0x010D	; 0x80010d <TimerOverflow+0x2>
 1b6:	b0 91 0e 01 	lds	r27, 0x010E	; 0x80010e <TimerOverflow+0x3>
 1ba:	01 96       	adiw	r24, 0x01	; 1
 1bc:	a1 1d       	adc	r26, r1
 1be:	b1 1d       	adc	r27, r1
 1c0:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <TimerOverflow>
 1c4:	90 93 0c 01 	sts	0x010C, r25	; 0x80010c <TimerOverflow+0x1>
 1c8:	a0 93 0d 01 	sts	0x010D, r26	; 0x80010d <TimerOverflow+0x2>
 1cc:	b0 93 0e 01 	sts	0x010E, r27	; 0x80010e <TimerOverflow+0x3>
	TCNT2 = 0;
 1d0:	14 bc       	out	0x24, r1	; 36
}
 1d2:	bf 91       	pop	r27
 1d4:	af 91       	pop	r26
 1d6:	9f 91       	pop	r25
 1d8:	8f 91       	pop	r24
 1da:	0f 90       	pop	r0
 1dc:	0f be       	out	0x3f, r0	; 63
 1de:	0f 90       	pop	r0
 1e0:	1f 90       	pop	r1
 1e2:	18 95       	reti

000001e4 <__vector_15>:
char isOn = 0;
ISR ( TIMER0_COMP_vect ) {
 1e4:	1f 92       	push	r1
 1e6:	0f 92       	push	r0
 1e8:	0f b6       	in	r0, 0x3f	; 63
 1ea:	0f 92       	push	r0
 1ec:	11 24       	eor	r1, r1
 1ee:	8f 93       	push	r24
	if(isOn) {
 1f0:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 1f4:	88 23       	and	r24, r24
 1f6:	29 f0       	breq	.+10     	; 0x202 <__vector_15+0x1e>
		PORTB = 1;
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	88 bb       	out	0x18, r24	; 24
		isOn = 0;
 1fc:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
 200:	04 c0       	rjmp	.+8      	; 0x20a <__vector_15+0x26>
	} else {
		PORTB = 0;
 202:	18 ba       	out	0x18, r1	; 24
		isOn = 1;
 204:	81 e0       	ldi	r24, 0x01	; 1
 206:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
	}
}
 20a:	8f 91       	pop	r24
 20c:	0f 90       	pop	r0
 20e:	0f be       	out	0x3f, r0	; 63
 210:	0f 90       	pop	r0
 212:	1f 90       	pop	r1
 214:	18 95       	reti

00000216 <wait>:

void wait( int ms ) {
	for (int i=0; i<ms; i++) {
 216:	20 e0       	ldi	r18, 0x00	; 0
 218:	30 e0       	ldi	r19, 0x00	; 0
 21a:	08 c0       	rjmp	.+16     	; 0x22c <wait+0x16>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21c:	ef ec       	ldi	r30, 0xCF	; 207
 21e:	f7 e0       	ldi	r31, 0x07	; 7
 220:	31 97       	sbiw	r30, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <wait+0xa>
 224:	00 c0       	rjmp	.+0      	; 0x226 <wait+0x10>
 226:	00 00       	nop
 228:	2f 5f       	subi	r18, 0xFF	; 255
 22a:	3f 4f       	sbci	r19, 0xFF	; 255
 22c:	28 17       	cp	r18, r24
 22e:	39 07       	cpc	r19, r25
 230:	ac f3       	brlt	.-22     	; 0x21c <wait+0x6>
		_delay_ms( 1 );		// library function (max 30 ms at 8MHz)
	}
}
 232:	08 95       	ret

00000234 <timer2Init>:

void timer2Init(void) {
	TIMSK |= 0b01000000; // Enable overflow interupt.
 234:	87 b7       	in	r24, 0x37	; 55
 236:	80 64       	ori	r24, 0x40	; 64
 238:	87 bf       	out	0x37, r24	; 55

	TCCR2 = 0b0000;
 23a:	15 bc       	out	0x25, r1	; 37
 23c:	08 95       	ret

0000023e <timer0Init>:
}

void timer0Init(void){
	TCCR0 = 0b01001100; // Turn on fast PWM. Prescaler on 256.
 23e:	8c e4       	ldi	r24, 0x4C	; 76
 240:	83 bf       	out	0x33, r24	; 51
	TIMSK |= BIT(1); // Set timer/counter 0 to compare match interupt. 31,250
 242:	87 b7       	in	r24, 0x37	; 55
 244:	82 60       	ori	r24, 0x02	; 2
 246:	87 bf       	out	0x37, r24	; 55
	//TCNT0 = -31.250 * 15;
	DDRB = 0xFF;
 248:	8f ef       	ldi	r24, 0xFF	; 255
 24a:	87 bb       	out	0x17, r24	; 23
 24c:	08 95       	ret

0000024e <main>:
}

char test = 0;
int main(void)
{
	text = malloc(sizeof(char) * 255);
 24e:	8f ef       	ldi	r24, 0xFF	; 255
 250:	90 e0       	ldi	r25, 0x00	; 0
 252:	d2 d1       	rcall	.+932    	; 0x5f8 <malloc>
 254:	90 93 10 01 	sts	0x0110, r25	; 0x800110 <text+0x1>
 258:	80 93 0f 01 	sts	0x010F, r24	; 0x80010f <text>
	double distance = 0;
	DDRA = 0b01;
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	8a bb       	out	0x1a, r24	; 26
	
	wait(10);
 260:	8a e0       	ldi	r24, 0x0A	; 10
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	d8 df       	rcall	.-80     	; 0x216 <wait>
	
	EICRB |= 0b10110000; // set PE 6 and 7 to rising and falling respectively
 266:	8a b7       	in	r24, 0x3a	; 58
 268:	80 6b       	ori	r24, 0xB0	; 176
 26a:	8a bf       	out	0x3a, r24	; 58
	EIMSK |= 0b11000000; // enable pins 6 and 7.
 26c:	89 b7       	in	r24, 0x39	; 57
 26e:	80 6c       	ori	r24, 0xC0	; 192
	timer2Init();
 270:	89 bf       	out	0x39, r24	; 57
 272:	e0 df       	rcall	.-64     	; 0x234 <timer2Init>
	timer0Init();
 274:	e4 df       	rcall	.-56     	; 0x23e <timer0Init>
	
	sei();
 276:	78 94       	sei
	
	wait(200);	
 278:	88 ec       	ldi	r24, 0xC8	; 200
 27a:	90 e0       	ldi	r25, 0x00	; 0
 27c:	cc df       	rcall	.-104    	; 0x216 <wait>
 27e:	81 e0       	ldi	r24, 0x01	; 1
	while(1)
	{
		PORTA = 0b1;
 280:	8b bb       	out	0x1b, r24	; 27
 282:	8a e1       	ldi	r24, 0x1A	; 26
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 284:	8a 95       	dec	r24
 286:	f1 f7       	brne	.-4      	; 0x284 <main+0x36>
 288:	00 c0       	rjmp	.+0      	; 0x28a <main+0x3c>
 28a:	1b ba       	out	0x1b, r1	; 27
		_delay_us(10);
		PORTA = 0;
 28c:	c0 e0       	ldi	r28, 0x00	; 0
		
		for(int i = 0; i < 30; i++) {
 28e:	d0 e0       	ldi	r29, 0x00	; 0
 290:	11 c0       	rjmp	.+34     	; 0x2b4 <main+0x66>
 292:	be 01       	movw	r22, r28
			TCNT0 = -31.250 * i;
 294:	0d 2e       	mov	r0, r29
 296:	00 0c       	add	r0, r0
 298:	88 0b       	sbc	r24, r24
 29a:	99 0b       	sbc	r25, r25
 29c:	a5 d0       	rcall	.+330    	; 0x3e8 <__floatsisf>
 29e:	20 e0       	ldi	r18, 0x00	; 0
 2a0:	30 e0       	ldi	r19, 0x00	; 0
 2a2:	4a ef       	ldi	r20, 0xFA	; 250
 2a4:	51 ec       	ldi	r21, 0xC1	; 193
 2a6:	2c d1       	rcall	.+600    	; 0x500 <__mulsf3>
 2a8:	71 d0       	rcall	.+226    	; 0x38c <__fixunssfsi>
 2aa:	62 bf       	out	0x32, r22	; 50
			wait(500);
 2ac:	84 ef       	ldi	r24, 0xF4	; 244
 2ae:	91 e0       	ldi	r25, 0x01	; 1
 2b0:	b2 df       	rcall	.-156    	; 0x216 <wait>
 2b2:	21 96       	adiw	r28, 0x01	; 1
	{
		PORTA = 0b1;
		_delay_us(10);
		PORTA = 0;
		
		for(int i = 0; i < 30; i++) {
 2b4:	ce 31       	cpi	r28, 0x1E	; 30
 2b6:	d1 05       	cpc	r29, r1
 2b8:	64 f3       	brlt	.-40     	; 0x292 <main+0x44>
 2ba:	e1 cf       	rjmp	.-62     	; 0x27e <main+0x30>

000002bc <__divsf3>:
 2bc:	0c d0       	rcall	.+24     	; 0x2d6 <__divsf3x>
 2be:	e6 c0       	rjmp	.+460    	; 0x48c <__fp_round>
 2c0:	de d0       	rcall	.+444    	; 0x47e <__fp_pscB>
 2c2:	40 f0       	brcs	.+16     	; 0x2d4 <__divsf3+0x18>
 2c4:	d5 d0       	rcall	.+426    	; 0x470 <__fp_pscA>
 2c6:	30 f0       	brcs	.+12     	; 0x2d4 <__divsf3+0x18>
 2c8:	21 f4       	brne	.+8      	; 0x2d2 <__divsf3+0x16>
 2ca:	5f 3f       	cpi	r21, 0xFF	; 255
 2cc:	19 f0       	breq	.+6      	; 0x2d4 <__divsf3+0x18>
 2ce:	c7 c0       	rjmp	.+398    	; 0x45e <__fp_inf>
 2d0:	51 11       	cpse	r21, r1
 2d2:	10 c1       	rjmp	.+544    	; 0x4f4 <__fp_szero>
 2d4:	ca c0       	rjmp	.+404    	; 0x46a <__fp_nan>

000002d6 <__divsf3x>:
 2d6:	eb d0       	rcall	.+470    	; 0x4ae <__fp_split3>
 2d8:	98 f3       	brcs	.-26     	; 0x2c0 <__divsf3+0x4>

000002da <__divsf3_pse>:
 2da:	99 23       	and	r25, r25
 2dc:	c9 f3       	breq	.-14     	; 0x2d0 <__divsf3+0x14>
 2de:	55 23       	and	r21, r21
 2e0:	b1 f3       	breq	.-20     	; 0x2ce <__divsf3+0x12>
 2e2:	95 1b       	sub	r25, r21
 2e4:	55 0b       	sbc	r21, r21
 2e6:	bb 27       	eor	r27, r27
 2e8:	aa 27       	eor	r26, r26
 2ea:	62 17       	cp	r22, r18
 2ec:	73 07       	cpc	r23, r19
 2ee:	84 07       	cpc	r24, r20
 2f0:	38 f0       	brcs	.+14     	; 0x300 <__divsf3_pse+0x26>
 2f2:	9f 5f       	subi	r25, 0xFF	; 255
 2f4:	5f 4f       	sbci	r21, 0xFF	; 255
 2f6:	22 0f       	add	r18, r18
 2f8:	33 1f       	adc	r19, r19
 2fa:	44 1f       	adc	r20, r20
 2fc:	aa 1f       	adc	r26, r26
 2fe:	a9 f3       	breq	.-22     	; 0x2ea <__divsf3_pse+0x10>
 300:	33 d0       	rcall	.+102    	; 0x368 <__divsf3_pse+0x8e>
 302:	0e 2e       	mov	r0, r30
 304:	3a f0       	brmi	.+14     	; 0x314 <__divsf3_pse+0x3a>
 306:	e0 e8       	ldi	r30, 0x80	; 128
 308:	30 d0       	rcall	.+96     	; 0x36a <__divsf3_pse+0x90>
 30a:	91 50       	subi	r25, 0x01	; 1
 30c:	50 40       	sbci	r21, 0x00	; 0
 30e:	e6 95       	lsr	r30
 310:	00 1c       	adc	r0, r0
 312:	ca f7       	brpl	.-14     	; 0x306 <__divsf3_pse+0x2c>
 314:	29 d0       	rcall	.+82     	; 0x368 <__divsf3_pse+0x8e>
 316:	fe 2f       	mov	r31, r30
 318:	27 d0       	rcall	.+78     	; 0x368 <__divsf3_pse+0x8e>
 31a:	66 0f       	add	r22, r22
 31c:	77 1f       	adc	r23, r23
 31e:	88 1f       	adc	r24, r24
 320:	bb 1f       	adc	r27, r27
 322:	26 17       	cp	r18, r22
 324:	37 07       	cpc	r19, r23
 326:	48 07       	cpc	r20, r24
 328:	ab 07       	cpc	r26, r27
 32a:	b0 e8       	ldi	r27, 0x80	; 128
 32c:	09 f0       	breq	.+2      	; 0x330 <__divsf3_pse+0x56>
 32e:	bb 0b       	sbc	r27, r27
 330:	80 2d       	mov	r24, r0
 332:	bf 01       	movw	r22, r30
 334:	ff 27       	eor	r31, r31
 336:	93 58       	subi	r25, 0x83	; 131
 338:	5f 4f       	sbci	r21, 0xFF	; 255
 33a:	2a f0       	brmi	.+10     	; 0x346 <__divsf3_pse+0x6c>
 33c:	9e 3f       	cpi	r25, 0xFE	; 254
 33e:	51 05       	cpc	r21, r1
 340:	68 f0       	brcs	.+26     	; 0x35c <__divsf3_pse+0x82>
 342:	8d c0       	rjmp	.+282    	; 0x45e <__fp_inf>
 344:	d7 c0       	rjmp	.+430    	; 0x4f4 <__fp_szero>
 346:	5f 3f       	cpi	r21, 0xFF	; 255
 348:	ec f3       	brlt	.-6      	; 0x344 <__divsf3_pse+0x6a>
 34a:	98 3e       	cpi	r25, 0xE8	; 232
 34c:	dc f3       	brlt	.-10     	; 0x344 <__divsf3_pse+0x6a>
 34e:	86 95       	lsr	r24
 350:	77 95       	ror	r23
 352:	67 95       	ror	r22
 354:	b7 95       	ror	r27
 356:	f7 95       	ror	r31
 358:	9f 5f       	subi	r25, 0xFF	; 255
 35a:	c9 f7       	brne	.-14     	; 0x34e <__divsf3_pse+0x74>
 35c:	88 0f       	add	r24, r24
 35e:	91 1d       	adc	r25, r1
 360:	96 95       	lsr	r25
 362:	87 95       	ror	r24
 364:	97 f9       	bld	r25, 7
 366:	08 95       	ret
 368:	e1 e0       	ldi	r30, 0x01	; 1
 36a:	66 0f       	add	r22, r22
 36c:	77 1f       	adc	r23, r23
 36e:	88 1f       	adc	r24, r24
 370:	bb 1f       	adc	r27, r27
 372:	62 17       	cp	r22, r18
 374:	73 07       	cpc	r23, r19
 376:	84 07       	cpc	r24, r20
 378:	ba 07       	cpc	r27, r26
 37a:	20 f0       	brcs	.+8      	; 0x384 <__divsf3_pse+0xaa>
 37c:	62 1b       	sub	r22, r18
 37e:	73 0b       	sbc	r23, r19
 380:	84 0b       	sbc	r24, r20
 382:	ba 0b       	sbc	r27, r26
 384:	ee 1f       	adc	r30, r30
 386:	88 f7       	brcc	.-30     	; 0x36a <__divsf3_pse+0x90>
 388:	e0 95       	com	r30
 38a:	08 95       	ret

0000038c <__fixunssfsi>:
 38c:	98 d0       	rcall	.+304    	; 0x4be <__fp_splitA>
 38e:	88 f0       	brcs	.+34     	; 0x3b2 <__fixunssfsi+0x26>
 390:	9f 57       	subi	r25, 0x7F	; 127
 392:	90 f0       	brcs	.+36     	; 0x3b8 <__fixunssfsi+0x2c>
 394:	b9 2f       	mov	r27, r25
 396:	99 27       	eor	r25, r25
 398:	b7 51       	subi	r27, 0x17	; 23
 39a:	a0 f0       	brcs	.+40     	; 0x3c4 <__fixunssfsi+0x38>
 39c:	d1 f0       	breq	.+52     	; 0x3d2 <__fixunssfsi+0x46>
 39e:	66 0f       	add	r22, r22
 3a0:	77 1f       	adc	r23, r23
 3a2:	88 1f       	adc	r24, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	1a f0       	brmi	.+6      	; 0x3ae <__fixunssfsi+0x22>
 3a8:	ba 95       	dec	r27
 3aa:	c9 f7       	brne	.-14     	; 0x39e <__fixunssfsi+0x12>
 3ac:	12 c0       	rjmp	.+36     	; 0x3d2 <__fixunssfsi+0x46>
 3ae:	b1 30       	cpi	r27, 0x01	; 1
 3b0:	81 f0       	breq	.+32     	; 0x3d2 <__fixunssfsi+0x46>
 3b2:	9f d0       	rcall	.+318    	; 0x4f2 <__fp_zero>
 3b4:	b1 e0       	ldi	r27, 0x01	; 1
 3b6:	08 95       	ret
 3b8:	9c c0       	rjmp	.+312    	; 0x4f2 <__fp_zero>
 3ba:	67 2f       	mov	r22, r23
 3bc:	78 2f       	mov	r23, r24
 3be:	88 27       	eor	r24, r24
 3c0:	b8 5f       	subi	r27, 0xF8	; 248
 3c2:	39 f0       	breq	.+14     	; 0x3d2 <__fixunssfsi+0x46>
 3c4:	b9 3f       	cpi	r27, 0xF9	; 249
 3c6:	cc f3       	brlt	.-14     	; 0x3ba <__fixunssfsi+0x2e>
 3c8:	86 95       	lsr	r24
 3ca:	77 95       	ror	r23
 3cc:	67 95       	ror	r22
 3ce:	b3 95       	inc	r27
 3d0:	d9 f7       	brne	.-10     	; 0x3c8 <__fixunssfsi+0x3c>
 3d2:	3e f4       	brtc	.+14     	; 0x3e2 <__fixunssfsi+0x56>
 3d4:	90 95       	com	r25
 3d6:	80 95       	com	r24
 3d8:	70 95       	com	r23
 3da:	61 95       	neg	r22
 3dc:	7f 4f       	sbci	r23, 0xFF	; 255
 3de:	8f 4f       	sbci	r24, 0xFF	; 255
 3e0:	9f 4f       	sbci	r25, 0xFF	; 255
 3e2:	08 95       	ret

000003e4 <__floatunsisf>:
 3e4:	e8 94       	clt
 3e6:	09 c0       	rjmp	.+18     	; 0x3fa <__floatsisf+0x12>

000003e8 <__floatsisf>:
 3e8:	97 fb       	bst	r25, 7
 3ea:	3e f4       	brtc	.+14     	; 0x3fa <__floatsisf+0x12>
 3ec:	90 95       	com	r25
 3ee:	80 95       	com	r24
 3f0:	70 95       	com	r23
 3f2:	61 95       	neg	r22
 3f4:	7f 4f       	sbci	r23, 0xFF	; 255
 3f6:	8f 4f       	sbci	r24, 0xFF	; 255
 3f8:	9f 4f       	sbci	r25, 0xFF	; 255
 3fa:	99 23       	and	r25, r25
 3fc:	a9 f0       	breq	.+42     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 3fe:	f9 2f       	mov	r31, r25
 400:	96 e9       	ldi	r25, 0x96	; 150
 402:	bb 27       	eor	r27, r27
 404:	93 95       	inc	r25
 406:	f6 95       	lsr	r31
 408:	87 95       	ror	r24
 40a:	77 95       	ror	r23
 40c:	67 95       	ror	r22
 40e:	b7 95       	ror	r27
 410:	f1 11       	cpse	r31, r1
 412:	f8 cf       	rjmp	.-16     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 414:	fa f4       	brpl	.+62     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 416:	bb 0f       	add	r27, r27
 418:	11 f4       	brne	.+4      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41a:	60 ff       	sbrs	r22, 0
 41c:	1b c0       	rjmp	.+54     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 41e:	6f 5f       	subi	r22, 0xFF	; 255
 420:	7f 4f       	sbci	r23, 0xFF	; 255
 422:	8f 4f       	sbci	r24, 0xFF	; 255
 424:	9f 4f       	sbci	r25, 0xFF	; 255
 426:	16 c0       	rjmp	.+44     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 428:	88 23       	and	r24, r24
 42a:	11 f0       	breq	.+4      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 42c:	96 e9       	ldi	r25, 0x96	; 150
 42e:	11 c0       	rjmp	.+34     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 430:	77 23       	and	r23, r23
 432:	21 f0       	breq	.+8      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 434:	9e e8       	ldi	r25, 0x8E	; 142
 436:	87 2f       	mov	r24, r23
 438:	76 2f       	mov	r23, r22
 43a:	05 c0       	rjmp	.+10     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 43c:	66 23       	and	r22, r22
 43e:	71 f0       	breq	.+28     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 440:	96 e8       	ldi	r25, 0x86	; 134
 442:	86 2f       	mov	r24, r22
 444:	70 e0       	ldi	r23, 0x00	; 0
 446:	60 e0       	ldi	r22, 0x00	; 0
 448:	2a f0       	brmi	.+10     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 44a:	9a 95       	dec	r25
 44c:	66 0f       	add	r22, r22
 44e:	77 1f       	adc	r23, r23
 450:	88 1f       	adc	r24, r24
 452:	da f7       	brpl	.-10     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 454:	88 0f       	add	r24, r24
 456:	96 95       	lsr	r25
 458:	87 95       	ror	r24
 45a:	97 f9       	bld	r25, 7
 45c:	08 95       	ret

0000045e <__fp_inf>:
 45e:	97 f9       	bld	r25, 7
 460:	9f 67       	ori	r25, 0x7F	; 127
 462:	80 e8       	ldi	r24, 0x80	; 128
 464:	70 e0       	ldi	r23, 0x00	; 0
 466:	60 e0       	ldi	r22, 0x00	; 0
 468:	08 95       	ret

0000046a <__fp_nan>:
 46a:	9f ef       	ldi	r25, 0xFF	; 255
 46c:	80 ec       	ldi	r24, 0xC0	; 192
 46e:	08 95       	ret

00000470 <__fp_pscA>:
 470:	00 24       	eor	r0, r0
 472:	0a 94       	dec	r0
 474:	16 16       	cp	r1, r22
 476:	17 06       	cpc	r1, r23
 478:	18 06       	cpc	r1, r24
 47a:	09 06       	cpc	r0, r25
 47c:	08 95       	ret

0000047e <__fp_pscB>:
 47e:	00 24       	eor	r0, r0
 480:	0a 94       	dec	r0
 482:	12 16       	cp	r1, r18
 484:	13 06       	cpc	r1, r19
 486:	14 06       	cpc	r1, r20
 488:	05 06       	cpc	r0, r21
 48a:	08 95       	ret

0000048c <__fp_round>:
 48c:	09 2e       	mov	r0, r25
 48e:	03 94       	inc	r0
 490:	00 0c       	add	r0, r0
 492:	11 f4       	brne	.+4      	; 0x498 <__fp_round+0xc>
 494:	88 23       	and	r24, r24
 496:	52 f0       	brmi	.+20     	; 0x4ac <__fp_round+0x20>
 498:	bb 0f       	add	r27, r27
 49a:	40 f4       	brcc	.+16     	; 0x4ac <__fp_round+0x20>
 49c:	bf 2b       	or	r27, r31
 49e:	11 f4       	brne	.+4      	; 0x4a4 <__fp_round+0x18>
 4a0:	60 ff       	sbrs	r22, 0
 4a2:	04 c0       	rjmp	.+8      	; 0x4ac <__fp_round+0x20>
 4a4:	6f 5f       	subi	r22, 0xFF	; 255
 4a6:	7f 4f       	sbci	r23, 0xFF	; 255
 4a8:	8f 4f       	sbci	r24, 0xFF	; 255
 4aa:	9f 4f       	sbci	r25, 0xFF	; 255
 4ac:	08 95       	ret

000004ae <__fp_split3>:
 4ae:	57 fd       	sbrc	r21, 7
 4b0:	90 58       	subi	r25, 0x80	; 128
 4b2:	44 0f       	add	r20, r20
 4b4:	55 1f       	adc	r21, r21
 4b6:	59 f0       	breq	.+22     	; 0x4ce <__fp_splitA+0x10>
 4b8:	5f 3f       	cpi	r21, 0xFF	; 255
 4ba:	71 f0       	breq	.+28     	; 0x4d8 <__fp_splitA+0x1a>
 4bc:	47 95       	ror	r20

000004be <__fp_splitA>:
 4be:	88 0f       	add	r24, r24
 4c0:	97 fb       	bst	r25, 7
 4c2:	99 1f       	adc	r25, r25
 4c4:	61 f0       	breq	.+24     	; 0x4de <__fp_splitA+0x20>
 4c6:	9f 3f       	cpi	r25, 0xFF	; 255
 4c8:	79 f0       	breq	.+30     	; 0x4e8 <__fp_splitA+0x2a>
 4ca:	87 95       	ror	r24
 4cc:	08 95       	ret
 4ce:	12 16       	cp	r1, r18
 4d0:	13 06       	cpc	r1, r19
 4d2:	14 06       	cpc	r1, r20
 4d4:	55 1f       	adc	r21, r21
 4d6:	f2 cf       	rjmp	.-28     	; 0x4bc <__fp_split3+0xe>
 4d8:	46 95       	lsr	r20
 4da:	f1 df       	rcall	.-30     	; 0x4be <__fp_splitA>
 4dc:	08 c0       	rjmp	.+16     	; 0x4ee <__fp_splitA+0x30>
 4de:	16 16       	cp	r1, r22
 4e0:	17 06       	cpc	r1, r23
 4e2:	18 06       	cpc	r1, r24
 4e4:	99 1f       	adc	r25, r25
 4e6:	f1 cf       	rjmp	.-30     	; 0x4ca <__fp_splitA+0xc>
 4e8:	86 95       	lsr	r24
 4ea:	71 05       	cpc	r23, r1
 4ec:	61 05       	cpc	r22, r1
 4ee:	08 94       	sec
 4f0:	08 95       	ret

000004f2 <__fp_zero>:
 4f2:	e8 94       	clt

000004f4 <__fp_szero>:
 4f4:	bb 27       	eor	r27, r27
 4f6:	66 27       	eor	r22, r22
 4f8:	77 27       	eor	r23, r23
 4fa:	cb 01       	movw	r24, r22
 4fc:	97 f9       	bld	r25, 7
 4fe:	08 95       	ret

00000500 <__mulsf3>:
 500:	0b d0       	rcall	.+22     	; 0x518 <__mulsf3x>
 502:	c4 cf       	rjmp	.-120    	; 0x48c <__fp_round>
 504:	b5 df       	rcall	.-150    	; 0x470 <__fp_pscA>
 506:	28 f0       	brcs	.+10     	; 0x512 <__mulsf3+0x12>
 508:	ba df       	rcall	.-140    	; 0x47e <__fp_pscB>
 50a:	18 f0       	brcs	.+6      	; 0x512 <__mulsf3+0x12>
 50c:	95 23       	and	r25, r21
 50e:	09 f0       	breq	.+2      	; 0x512 <__mulsf3+0x12>
 510:	a6 cf       	rjmp	.-180    	; 0x45e <__fp_inf>
 512:	ab cf       	rjmp	.-170    	; 0x46a <__fp_nan>
 514:	11 24       	eor	r1, r1
 516:	ee cf       	rjmp	.-36     	; 0x4f4 <__fp_szero>

00000518 <__mulsf3x>:
 518:	ca df       	rcall	.-108    	; 0x4ae <__fp_split3>
 51a:	a0 f3       	brcs	.-24     	; 0x504 <__mulsf3+0x4>

0000051c <__mulsf3_pse>:
 51c:	95 9f       	mul	r25, r21
 51e:	d1 f3       	breq	.-12     	; 0x514 <__mulsf3+0x14>
 520:	95 0f       	add	r25, r21
 522:	50 e0       	ldi	r21, 0x00	; 0
 524:	55 1f       	adc	r21, r21
 526:	62 9f       	mul	r22, r18
 528:	f0 01       	movw	r30, r0
 52a:	72 9f       	mul	r23, r18
 52c:	bb 27       	eor	r27, r27
 52e:	f0 0d       	add	r31, r0
 530:	b1 1d       	adc	r27, r1
 532:	63 9f       	mul	r22, r19
 534:	aa 27       	eor	r26, r26
 536:	f0 0d       	add	r31, r0
 538:	b1 1d       	adc	r27, r1
 53a:	aa 1f       	adc	r26, r26
 53c:	64 9f       	mul	r22, r20
 53e:	66 27       	eor	r22, r22
 540:	b0 0d       	add	r27, r0
 542:	a1 1d       	adc	r26, r1
 544:	66 1f       	adc	r22, r22
 546:	82 9f       	mul	r24, r18
 548:	22 27       	eor	r18, r18
 54a:	b0 0d       	add	r27, r0
 54c:	a1 1d       	adc	r26, r1
 54e:	62 1f       	adc	r22, r18
 550:	73 9f       	mul	r23, r19
 552:	b0 0d       	add	r27, r0
 554:	a1 1d       	adc	r26, r1
 556:	62 1f       	adc	r22, r18
 558:	83 9f       	mul	r24, r19
 55a:	a0 0d       	add	r26, r0
 55c:	61 1d       	adc	r22, r1
 55e:	22 1f       	adc	r18, r18
 560:	74 9f       	mul	r23, r20
 562:	33 27       	eor	r19, r19
 564:	a0 0d       	add	r26, r0
 566:	61 1d       	adc	r22, r1
 568:	23 1f       	adc	r18, r19
 56a:	84 9f       	mul	r24, r20
 56c:	60 0d       	add	r22, r0
 56e:	21 1d       	adc	r18, r1
 570:	82 2f       	mov	r24, r18
 572:	76 2f       	mov	r23, r22
 574:	6a 2f       	mov	r22, r26
 576:	11 24       	eor	r1, r1
 578:	9f 57       	subi	r25, 0x7F	; 127
 57a:	50 40       	sbci	r21, 0x00	; 0
 57c:	8a f0       	brmi	.+34     	; 0x5a0 <__mulsf3_pse+0x84>
 57e:	e1 f0       	breq	.+56     	; 0x5b8 <__mulsf3_pse+0x9c>
 580:	88 23       	and	r24, r24
 582:	4a f0       	brmi	.+18     	; 0x596 <__mulsf3_pse+0x7a>
 584:	ee 0f       	add	r30, r30
 586:	ff 1f       	adc	r31, r31
 588:	bb 1f       	adc	r27, r27
 58a:	66 1f       	adc	r22, r22
 58c:	77 1f       	adc	r23, r23
 58e:	88 1f       	adc	r24, r24
 590:	91 50       	subi	r25, 0x01	; 1
 592:	50 40       	sbci	r21, 0x00	; 0
 594:	a9 f7       	brne	.-22     	; 0x580 <__mulsf3_pse+0x64>
 596:	9e 3f       	cpi	r25, 0xFE	; 254
 598:	51 05       	cpc	r21, r1
 59a:	70 f0       	brcs	.+28     	; 0x5b8 <__mulsf3_pse+0x9c>
 59c:	60 cf       	rjmp	.-320    	; 0x45e <__fp_inf>
 59e:	aa cf       	rjmp	.-172    	; 0x4f4 <__fp_szero>
 5a0:	5f 3f       	cpi	r21, 0xFF	; 255
 5a2:	ec f3       	brlt	.-6      	; 0x59e <__mulsf3_pse+0x82>
 5a4:	98 3e       	cpi	r25, 0xE8	; 232
 5a6:	dc f3       	brlt	.-10     	; 0x59e <__mulsf3_pse+0x82>
 5a8:	86 95       	lsr	r24
 5aa:	77 95       	ror	r23
 5ac:	67 95       	ror	r22
 5ae:	b7 95       	ror	r27
 5b0:	f7 95       	ror	r31
 5b2:	e7 95       	ror	r30
 5b4:	9f 5f       	subi	r25, 0xFF	; 255
 5b6:	c1 f7       	brne	.-16     	; 0x5a8 <__mulsf3_pse+0x8c>
 5b8:	fe 2b       	or	r31, r30
 5ba:	88 0f       	add	r24, r24
 5bc:	91 1d       	adc	r25, r1
 5be:	96 95       	lsr	r25
 5c0:	87 95       	ror	r24
 5c2:	97 f9       	bld	r25, 7
 5c4:	08 95       	ret

000005c6 <__muluhisi3>:
 5c6:	09 d0       	rcall	.+18     	; 0x5da <__umulhisi3>
 5c8:	a5 9f       	mul	r26, r21
 5ca:	90 0d       	add	r25, r0
 5cc:	b4 9f       	mul	r27, r20
 5ce:	90 0d       	add	r25, r0
 5d0:	a4 9f       	mul	r26, r20
 5d2:	80 0d       	add	r24, r0
 5d4:	91 1d       	adc	r25, r1
 5d6:	11 24       	eor	r1, r1
 5d8:	08 95       	ret

000005da <__umulhisi3>:
 5da:	a2 9f       	mul	r26, r18
 5dc:	b0 01       	movw	r22, r0
 5de:	b3 9f       	mul	r27, r19
 5e0:	c0 01       	movw	r24, r0
 5e2:	a3 9f       	mul	r26, r19
 5e4:	70 0d       	add	r23, r0
 5e6:	81 1d       	adc	r24, r1
 5e8:	11 24       	eor	r1, r1
 5ea:	91 1d       	adc	r25, r1
 5ec:	b2 9f       	mul	r27, r18
 5ee:	70 0d       	add	r23, r0
 5f0:	81 1d       	adc	r24, r1
 5f2:	11 24       	eor	r1, r1
 5f4:	91 1d       	adc	r25, r1
 5f6:	08 95       	ret

000005f8 <malloc>:
 5f8:	0f 93       	push	r16
 5fa:	1f 93       	push	r17
 5fc:	cf 93       	push	r28
 5fe:	df 93       	push	r29
 600:	82 30       	cpi	r24, 0x02	; 2
 602:	91 05       	cpc	r25, r1
 604:	10 f4       	brcc	.+4      	; 0x60a <malloc+0x12>
 606:	82 e0       	ldi	r24, 0x02	; 2
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <__flp>
 60e:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <__flp+0x1>
 612:	20 e0       	ldi	r18, 0x00	; 0
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	a0 e0       	ldi	r26, 0x00	; 0
 618:	b0 e0       	ldi	r27, 0x00	; 0
 61a:	30 97       	sbiw	r30, 0x00	; 0
 61c:	19 f1       	breq	.+70     	; 0x664 <malloc+0x6c>
 61e:	40 81       	ld	r20, Z
 620:	51 81       	ldd	r21, Z+1	; 0x01
 622:	02 81       	ldd	r16, Z+2	; 0x02
 624:	13 81       	ldd	r17, Z+3	; 0x03
 626:	48 17       	cp	r20, r24
 628:	59 07       	cpc	r21, r25
 62a:	c8 f0       	brcs	.+50     	; 0x65e <malloc+0x66>
 62c:	84 17       	cp	r24, r20
 62e:	95 07       	cpc	r25, r21
 630:	69 f4       	brne	.+26     	; 0x64c <malloc+0x54>
 632:	10 97       	sbiw	r26, 0x00	; 0
 634:	31 f0       	breq	.+12     	; 0x642 <malloc+0x4a>
 636:	12 96       	adiw	r26, 0x02	; 2
 638:	0c 93       	st	X, r16
 63a:	12 97       	sbiw	r26, 0x02	; 2
 63c:	13 96       	adiw	r26, 0x03	; 3
 63e:	1c 93       	st	X, r17
 640:	27 c0       	rjmp	.+78     	; 0x690 <malloc+0x98>
 642:	00 93 13 01 	sts	0x0113, r16	; 0x800113 <__flp>
 646:	10 93 14 01 	sts	0x0114, r17	; 0x800114 <__flp+0x1>
 64a:	22 c0       	rjmp	.+68     	; 0x690 <malloc+0x98>
 64c:	21 15       	cp	r18, r1
 64e:	31 05       	cpc	r19, r1
 650:	19 f0       	breq	.+6      	; 0x658 <malloc+0x60>
 652:	42 17       	cp	r20, r18
 654:	53 07       	cpc	r21, r19
 656:	18 f4       	brcc	.+6      	; 0x65e <malloc+0x66>
 658:	9a 01       	movw	r18, r20
 65a:	bd 01       	movw	r22, r26
 65c:	ef 01       	movw	r28, r30
 65e:	df 01       	movw	r26, r30
 660:	f8 01       	movw	r30, r16
 662:	db cf       	rjmp	.-74     	; 0x61a <malloc+0x22>
 664:	21 15       	cp	r18, r1
 666:	31 05       	cpc	r19, r1
 668:	f9 f0       	breq	.+62     	; 0x6a8 <malloc+0xb0>
 66a:	28 1b       	sub	r18, r24
 66c:	39 0b       	sbc	r19, r25
 66e:	24 30       	cpi	r18, 0x04	; 4
 670:	31 05       	cpc	r19, r1
 672:	80 f4       	brcc	.+32     	; 0x694 <malloc+0x9c>
 674:	8a 81       	ldd	r24, Y+2	; 0x02
 676:	9b 81       	ldd	r25, Y+3	; 0x03
 678:	61 15       	cp	r22, r1
 67a:	71 05       	cpc	r23, r1
 67c:	21 f0       	breq	.+8      	; 0x686 <malloc+0x8e>
 67e:	fb 01       	movw	r30, r22
 680:	93 83       	std	Z+3, r25	; 0x03
 682:	82 83       	std	Z+2, r24	; 0x02
 684:	04 c0       	rjmp	.+8      	; 0x68e <malloc+0x96>
 686:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <__flp+0x1>
 68a:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <__flp>
 68e:	fe 01       	movw	r30, r28
 690:	32 96       	adiw	r30, 0x02	; 2
 692:	44 c0       	rjmp	.+136    	; 0x71c <malloc+0x124>
 694:	fe 01       	movw	r30, r28
 696:	e2 0f       	add	r30, r18
 698:	f3 1f       	adc	r31, r19
 69a:	81 93       	st	Z+, r24
 69c:	91 93       	st	Z+, r25
 69e:	22 50       	subi	r18, 0x02	; 2
 6a0:	31 09       	sbc	r19, r1
 6a2:	39 83       	std	Y+1, r19	; 0x01
 6a4:	28 83       	st	Y, r18
 6a6:	3a c0       	rjmp	.+116    	; 0x71c <malloc+0x124>
 6a8:	20 91 11 01 	lds	r18, 0x0111	; 0x800111 <__brkval>
 6ac:	30 91 12 01 	lds	r19, 0x0112	; 0x800112 <__brkval+0x1>
 6b0:	23 2b       	or	r18, r19
 6b2:	41 f4       	brne	.+16     	; 0x6c4 <malloc+0xcc>
 6b4:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 6b8:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 6bc:	30 93 12 01 	sts	0x0112, r19	; 0x800112 <__brkval+0x1>
 6c0:	20 93 11 01 	sts	0x0111, r18	; 0x800111 <__brkval>
 6c4:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6c8:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 6cc:	21 15       	cp	r18, r1
 6ce:	31 05       	cpc	r19, r1
 6d0:	41 f4       	brne	.+16     	; 0x6e2 <malloc+0xea>
 6d2:	2d b7       	in	r18, 0x3d	; 61
 6d4:	3e b7       	in	r19, 0x3e	; 62
 6d6:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 6da:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 6de:	24 1b       	sub	r18, r20
 6e0:	35 0b       	sbc	r19, r21
 6e2:	e0 91 11 01 	lds	r30, 0x0111	; 0x800111 <__brkval>
 6e6:	f0 91 12 01 	lds	r31, 0x0112	; 0x800112 <__brkval+0x1>
 6ea:	e2 17       	cp	r30, r18
 6ec:	f3 07       	cpc	r31, r19
 6ee:	a0 f4       	brcc	.+40     	; 0x718 <malloc+0x120>
 6f0:	2e 1b       	sub	r18, r30
 6f2:	3f 0b       	sbc	r19, r31
 6f4:	28 17       	cp	r18, r24
 6f6:	39 07       	cpc	r19, r25
 6f8:	78 f0       	brcs	.+30     	; 0x718 <malloc+0x120>
 6fa:	ac 01       	movw	r20, r24
 6fc:	4e 5f       	subi	r20, 0xFE	; 254
 6fe:	5f 4f       	sbci	r21, 0xFF	; 255
 700:	24 17       	cp	r18, r20
 702:	35 07       	cpc	r19, r21
 704:	48 f0       	brcs	.+18     	; 0x718 <malloc+0x120>
 706:	4e 0f       	add	r20, r30
 708:	5f 1f       	adc	r21, r31
 70a:	50 93 12 01 	sts	0x0112, r21	; 0x800112 <__brkval+0x1>
 70e:	40 93 11 01 	sts	0x0111, r20	; 0x800111 <__brkval>
 712:	81 93       	st	Z+, r24
 714:	91 93       	st	Z+, r25
 716:	02 c0       	rjmp	.+4      	; 0x71c <malloc+0x124>
 718:	e0 e0       	ldi	r30, 0x00	; 0
 71a:	f0 e0       	ldi	r31, 0x00	; 0
 71c:	cf 01       	movw	r24, r30
 71e:	df 91       	pop	r29
 720:	cf 91       	pop	r28
 722:	1f 91       	pop	r17
 724:	0f 91       	pop	r16
 726:	08 95       	ret

00000728 <free>:
 728:	cf 93       	push	r28
 72a:	df 93       	push	r29
 72c:	00 97       	sbiw	r24, 0x00	; 0
 72e:	09 f4       	brne	.+2      	; 0x732 <free+0xa>
 730:	81 c0       	rjmp	.+258    	; 0x834 <free+0x10c>
 732:	fc 01       	movw	r30, r24
 734:	32 97       	sbiw	r30, 0x02	; 2
 736:	13 82       	std	Z+3, r1	; 0x03
 738:	12 82       	std	Z+2, r1	; 0x02
 73a:	a0 91 13 01 	lds	r26, 0x0113	; 0x800113 <__flp>
 73e:	b0 91 14 01 	lds	r27, 0x0114	; 0x800114 <__flp+0x1>
 742:	10 97       	sbiw	r26, 0x00	; 0
 744:	81 f4       	brne	.+32     	; 0x766 <free+0x3e>
 746:	20 81       	ld	r18, Z
 748:	31 81       	ldd	r19, Z+1	; 0x01
 74a:	82 0f       	add	r24, r18
 74c:	93 1f       	adc	r25, r19
 74e:	20 91 11 01 	lds	r18, 0x0111	; 0x800111 <__brkval>
 752:	30 91 12 01 	lds	r19, 0x0112	; 0x800112 <__brkval+0x1>
 756:	28 17       	cp	r18, r24
 758:	39 07       	cpc	r19, r25
 75a:	51 f5       	brne	.+84     	; 0x7b0 <free+0x88>
 75c:	f0 93 12 01 	sts	0x0112, r31	; 0x800112 <__brkval+0x1>
 760:	e0 93 11 01 	sts	0x0111, r30	; 0x800111 <__brkval>
 764:	67 c0       	rjmp	.+206    	; 0x834 <free+0x10c>
 766:	ed 01       	movw	r28, r26
 768:	20 e0       	ldi	r18, 0x00	; 0
 76a:	30 e0       	ldi	r19, 0x00	; 0
 76c:	ce 17       	cp	r28, r30
 76e:	df 07       	cpc	r29, r31
 770:	40 f4       	brcc	.+16     	; 0x782 <free+0x5a>
 772:	4a 81       	ldd	r20, Y+2	; 0x02
 774:	5b 81       	ldd	r21, Y+3	; 0x03
 776:	9e 01       	movw	r18, r28
 778:	41 15       	cp	r20, r1
 77a:	51 05       	cpc	r21, r1
 77c:	f1 f0       	breq	.+60     	; 0x7ba <free+0x92>
 77e:	ea 01       	movw	r28, r20
 780:	f5 cf       	rjmp	.-22     	; 0x76c <free+0x44>
 782:	d3 83       	std	Z+3, r29	; 0x03
 784:	c2 83       	std	Z+2, r28	; 0x02
 786:	40 81       	ld	r20, Z
 788:	51 81       	ldd	r21, Z+1	; 0x01
 78a:	84 0f       	add	r24, r20
 78c:	95 1f       	adc	r25, r21
 78e:	c8 17       	cp	r28, r24
 790:	d9 07       	cpc	r29, r25
 792:	59 f4       	brne	.+22     	; 0x7aa <free+0x82>
 794:	88 81       	ld	r24, Y
 796:	99 81       	ldd	r25, Y+1	; 0x01
 798:	84 0f       	add	r24, r20
 79a:	95 1f       	adc	r25, r21
 79c:	02 96       	adiw	r24, 0x02	; 2
 79e:	91 83       	std	Z+1, r25	; 0x01
 7a0:	80 83       	st	Z, r24
 7a2:	8a 81       	ldd	r24, Y+2	; 0x02
 7a4:	9b 81       	ldd	r25, Y+3	; 0x03
 7a6:	93 83       	std	Z+3, r25	; 0x03
 7a8:	82 83       	std	Z+2, r24	; 0x02
 7aa:	21 15       	cp	r18, r1
 7ac:	31 05       	cpc	r19, r1
 7ae:	29 f4       	brne	.+10     	; 0x7ba <free+0x92>
 7b0:	f0 93 14 01 	sts	0x0114, r31	; 0x800114 <__flp+0x1>
 7b4:	e0 93 13 01 	sts	0x0113, r30	; 0x800113 <__flp>
 7b8:	3d c0       	rjmp	.+122    	; 0x834 <free+0x10c>
 7ba:	e9 01       	movw	r28, r18
 7bc:	fb 83       	std	Y+3, r31	; 0x03
 7be:	ea 83       	std	Y+2, r30	; 0x02
 7c0:	49 91       	ld	r20, Y+
 7c2:	59 91       	ld	r21, Y+
 7c4:	c4 0f       	add	r28, r20
 7c6:	d5 1f       	adc	r29, r21
 7c8:	ec 17       	cp	r30, r28
 7ca:	fd 07       	cpc	r31, r29
 7cc:	61 f4       	brne	.+24     	; 0x7e6 <free+0xbe>
 7ce:	80 81       	ld	r24, Z
 7d0:	91 81       	ldd	r25, Z+1	; 0x01
 7d2:	84 0f       	add	r24, r20
 7d4:	95 1f       	adc	r25, r21
 7d6:	02 96       	adiw	r24, 0x02	; 2
 7d8:	e9 01       	movw	r28, r18
 7da:	99 83       	std	Y+1, r25	; 0x01
 7dc:	88 83       	st	Y, r24
 7de:	82 81       	ldd	r24, Z+2	; 0x02
 7e0:	93 81       	ldd	r25, Z+3	; 0x03
 7e2:	9b 83       	std	Y+3, r25	; 0x03
 7e4:	8a 83       	std	Y+2, r24	; 0x02
 7e6:	e0 e0       	ldi	r30, 0x00	; 0
 7e8:	f0 e0       	ldi	r31, 0x00	; 0
 7ea:	12 96       	adiw	r26, 0x02	; 2
 7ec:	8d 91       	ld	r24, X+
 7ee:	9c 91       	ld	r25, X
 7f0:	13 97       	sbiw	r26, 0x03	; 3
 7f2:	00 97       	sbiw	r24, 0x00	; 0
 7f4:	19 f0       	breq	.+6      	; 0x7fc <free+0xd4>
 7f6:	fd 01       	movw	r30, r26
 7f8:	dc 01       	movw	r26, r24
 7fa:	f7 cf       	rjmp	.-18     	; 0x7ea <free+0xc2>
 7fc:	8d 91       	ld	r24, X+
 7fe:	9c 91       	ld	r25, X
 800:	11 97       	sbiw	r26, 0x01	; 1
 802:	9d 01       	movw	r18, r26
 804:	2e 5f       	subi	r18, 0xFE	; 254
 806:	3f 4f       	sbci	r19, 0xFF	; 255
 808:	82 0f       	add	r24, r18
 80a:	93 1f       	adc	r25, r19
 80c:	20 91 11 01 	lds	r18, 0x0111	; 0x800111 <__brkval>
 810:	30 91 12 01 	lds	r19, 0x0112	; 0x800112 <__brkval+0x1>
 814:	28 17       	cp	r18, r24
 816:	39 07       	cpc	r19, r25
 818:	69 f4       	brne	.+26     	; 0x834 <free+0x10c>
 81a:	30 97       	sbiw	r30, 0x00	; 0
 81c:	29 f4       	brne	.+10     	; 0x828 <free+0x100>
 81e:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__flp+0x1>
 822:	10 92 13 01 	sts	0x0113, r1	; 0x800113 <__flp>
 826:	02 c0       	rjmp	.+4      	; 0x82c <free+0x104>
 828:	13 82       	std	Z+3, r1	; 0x03
 82a:	12 82       	std	Z+2, r1	; 0x02
 82c:	b0 93 12 01 	sts	0x0112, r27	; 0x800112 <__brkval+0x1>
 830:	a0 93 11 01 	sts	0x0111, r26	; 0x800111 <__brkval>
 834:	df 91       	pop	r29
 836:	cf 91       	pop	r28
 838:	08 95       	ret

0000083a <_exit>:
 83a:	f8 94       	cli

0000083c <__stop_program>:
 83c:	ff cf       	rjmp	.-2      	; 0x83c <__stop_program>
